#+Title: Bachelorarbeit
#+Author: Nikolai Weidt
#+LANGUAGE: de
#+OPTIONS: toc:2 tasks:t title:t todo:nil
#+OPTIONS: d:nil ':t
#+Todo: TODO(t) | DONE(d) 
#+EXCLUDE_TAGS: ignore

* Fragen                                                             :ignore:
  - Wachstum (So okay ohne epitaktisch)?
* TODO [12/15] Noch zu tun:                                          :ignore:
** TODO Diskussion:
   - Tracking
   - Magnetfeldlandschaft aus Simulation ist idealisiert
   - Netzteil ist blackbox
** TODO Fits passen nicht, weil nicht exponentiell. Zeigen?
   - Gerade für Sättigung in B(I)
** TODO DPI
** TODO Simulierte Trajektorien durch step_evaluate laufen lassen
   SCHEDULED: <2019-09-19 Do>
** TODO Plots von gemessenen Trajektorien
erstmal ausgewählte, vielleicht mittelwert?
** TODO mag_fit_fixed mir roter line mit Steigung aus regression
** DONE EB genauer erklären
   CLOSED: [2019-10-15 Di 15:29]
- [X] EB system kann genau einen makroskopisch remanenten Zustand haben, wenn die Flanken der Kurve steil genug und die Verschiebung groß genug ist. --- das ist nämlich toll an EB :)
- [X] Beim Feldkühlen von polykristallinene System wie sie bei uns verwendet werden: Blocking statt NEeltemp
- [X] Shift der Hystereses ist darin begründet, dass bei der Magnetisiseurngsumkehr ja die AF Momente den F an der Umkehr seiner Momente hindert eben wegen der Kopplungan der GRenzfläche.
- [X] zumindest ein bisschen was von einem EB Modell, zumindest das einfachste von Meiklejohn und bean und den Zusammenhang zwischen EB Feldstärke und Ferromagnetschichtdicke wünsche ich mir. 
- [X] Gesamtdrehimpuls J erklären
** DONE Transportkonzept genauer erklären
   CLOSED: [2019-10-15 Di 15:29]
Hier wäre es toll, wenn du zumindest ein bisschen noch auf die Kräfte eingehst. F_M und F_R sollten vorkommen und die Tatsache, das sie die Gleichgwichtsgeschwindigkeit bestimmen (+ Formel). Du musst nicht im Detail alle Einzelheiten der Elektrostatischen und vdW Kraft ausienandernehmen, aber zumindest nennen kannst du sie, da sie ja immerhin auch in die Simulaitonen am Ende eingehen. Du kannst beschreiben, dass die elektrostat. Kraft in unseren Experimentne abstoßend ist, während vdWaals und magnetostatische Kraft anziehend wirken, sodass aus deren Kräftegleichgewicht zunächst der Gleichgewichtsabstand resultiert...

Falls du das alles aber erst im Simulationskapitel machen willst, ist es auch ok, aber zzumindest F_R und F_M sollten hier auftauchen.
** DONE Blindwiderstand erklärt?
   CLOSED: [2019-10-15 Di 09:59]
** DONE Samplerate im Fit für Strom
CLOSED: [2019-10-12 Sa 21:16]
** DONE Fit Stromstärke mit Formel
CLOSED: [2019-10-12 Sa 21:16]
** DONE Fit Magnetfeld mit Formel
CLOSED: [2019-10-12 Sa 21:16]
** DONE Fit mit festen R und L
CLOSED: [2019-10-12 Sa 21:16]
** DONE Samplerate für jede Messung rausfinden
CLOSED: [2019-10-11 Fr 22:16]
** DONE Ausschaltstrom
CLOSED: [2019-10-11 Fr 22:16]
** DONE Einleitung magnetophoretische Mobilität
   CLOSED: [2019-10-11 Fr 15:43]
** DONE REIHENFOLGE FÜR FITS!!
   CLOSED: [2019-10-11 Fr 15:43]
** DONE Magnetfeld -> Flussdichte
CLOSED: [2019-10-10 Do 20:51]
* Header                                                             :ignore:
   #+latex_class:scrbook
   #+latex_class_options:[page,pdftex,12pt,a4paper,twoside,openright]
   #+latex_header: \usepackage[T1]{fontenc}
   #+latex_header: \usepackage[ngerman]{babel} 
   #+latex_header: \usepackage[bottom=2.5cm,left=2.5cm,right=2cm]{geometry}
   #+latex_header: \usepackage{color, xcolor}
   #+latex_header: \usepackage{float}
   #+latex_header: \usepackage{blindtext}
   #+latex_header: \usepackage{booktabs}
   #+latex_header: \usepackage{subcaption}
   #+latex_header: \usepackage[onehalfspacing]{setspace}
   #+latex_header: \usepackage{graphicx}
   #+latex_header: \usepackage{amsmath,amssymb,amstext,bbm}
   #+latex_header: \usepackage[labelfont=bf, textfont=small, figurename=Abb., tablename=Tab.]{caption}
   #+latex_header: \usepackage[output-decimal-marker={,}]{siunitx}
   #+latex_header: \usepackage{csquotes}
   #+latex_header: \setminted{fontsize=\footnotesize}
   #+latex_header: \usemintedstyle{emacs}
   #+latex_header: \usepackage[version=4]{mhchem}
   #+latex_header: \newgeometry{bottom=2.5cm,left=2.5cm,right=2.5cm}
   #+latex_header: \usepackage[style=alphabetic,maxbibnames=5,maxcitenames=5,backend=biber,language=german]{biblatex}
   #+latex_header: \addbibresource{library.bib}
   #+latex_header: \input{titlepage/titlepage}
   # #+INCLUDE: "./titlepage/titlepage.tex" src latex
     
* Andere Arbeiten                                                    :ignore:

** [[file:arbeiten/BAChJa.pdf][BAChJa]]
** [[file:arbeiten/Bachelorarbeit_MeRe.pdf][BAMeRe]]
** [[file:arbeiten/Meike%20Reginka%20-%20Masterarbeit%2015.06.18.pdf][MAMeRe]]
** [[file:arbeiten/Holzinger_2015_Diss%20Transport%20magnetischer%20Partikel%20durch%20ma%C3%9Fgeschneider....pdf][DissDeHo]]

* PDF:                                                               :ignore:
 [[file:ba.pdf][ba.pdf]] 
* Einleitung label:sec-einleitung
Durch den allgemeine Anstieg der Weltbevölkerung, den demographischen Wandel und die steigende Lebenserwartung wird eine Zunahme von Krankheiten wie Krebs oder Diabetes erwartet cite:bray_global_2018,zhou_worldwide_2016. Um dieser Entwicklung entgegen zu wirken, werden kostengünstige, patientennahe Diagnoseprozesse für die Individualmedizin entwickelt. So können bereits früh Krankheitsanzeichen und -ursachen entdeckt und bekämpft werden.

Neuartigen Analysesystemen wie /Lab-on-a-Chip/ (LOC) werden deswegen großes Potential für Biomedizin und Medizindiagnostik in der Zukunft zugesprochen. Durch Miniaturisierung der Chips ergeben sich viele Vorteile cite:stone_microfluidics_2001,knight_honey_2002.
Möglich sind unter anderem Biochips zur Analyse und Detektion von bestimmten Molekülen cite:papadea_evaluation_2002, Zellen (beispielsweise T-Zellen für die HIV/AIDS-Diagnostik cite:cheng_microchip_2007), Protein- und Molekülmarkern cite:wang_self-powered_2010, sowie DNA/RNA-Analysen (z.B. Identifizierung von resistenten Pathogenen cite:boehme_rapid_2010). Es können bereits geringe Probenvolumina innerhalb kürzester Zeit analysiert werden und es werden nur geringe Mengen von Reagenzien benötigt cite:chin_commercialization_2012. So können relativ kostengünstige Biochips und Analyseverfahren entwickelt werden, um zum Beispiel auch in Schwellen- und Entwicklungsländern die medizinische Versorgung zu verbessern. Ein wichtiger Bestandteil dieser LOCs ist Transport und Separation der Analyte innerhalb des Chips. Hier hat sich die Nutzung von magnetischen Partikeln bewährt. Verschiedene mikromagnetische Oberflächenstrukturierungen machen dabei den gezielten Transport der Partikel möglich cite:rampini_micromagnet_2016.  

Das in der Arbeitsgruppe \textsc{Ehresmann} etablierte Transportkonzept von superparamagnetischen Partikeln (SPP) oberhalb magnetisch strukturierter /Exchange-Bias/ (EB) Dünnschichtsysteme kann hierbei ein wichtiger Bestandteil zukünftiger Analysesysteme werden. Die Grundidee ist es durch ein extern angelegtes Magnetfeld die magnetische Feldlandschaft (MFL) eines künstlichen Domänenmusters so zu transformieren, dass ein gerichteter Transport der SPP zwischen /head-to-head/ und /tail-to-tail/-Domänenwänden möglich wird; dabei können diese SPP in verschiedenen Prozessschritten eines LOCs verwendet werden. Einerseits können Analyte, die an Partikel gebunden sind, in bestimmte Analysebereiche transportiert werden cite:ehresmann_asymmetric_2011, andererseits können aber auch Strömungsfelder durch den Partikeltransport erzeugt werden, welche die Analyten und Reagenzien durchmischen und so höhere biochemische Reaktionsraten bewirken cite:holzinger_controlled_2012. Ein weiteres Anwendungsgebiet ist die magnetophoretische Auftrennung der Partikel, um so verschiedene Partikelgrößen aufgrund unterschiedlicher magnetophoretischer Mobilitäten voneinander trennen zu können, damit zum Beispiel möglichst homogene Partikeldispersionen für Analysen erreicht werden können cite:zhou_magnetic_2016. Für jede dieser Anwendungen werden verschiedene Formen eines externen Magnetfeldes benötigt. Bisher wurden für den Partikeltransport trapezförmige Magnetfeldsequenzen mit konstanten Änderungsraten verwendet. In dieser Arbeit soll der Einfluss der Änderungsrate auf die Transportgeschwindigkeit und Trajektorie der Partikel genauer betrachtet werden, um Optimierungen bezüglich des Partikeltransports für das jeweilige Anwendungsgebiet möglich zu machen.
* Theoretische Grundlagen label:sec-grundlagen
In diesem Kapitel soll das theoretische Hintergrundwissen, welches zum Verständnis dieser Arbeit benötigt wird, vermittelt werden. Dazu wird zunächst der Elektromagnetismus eingeführt. Anschließend wird die Verbindung zum Magnetismus in Materie hergestellt. Dann werden die in dieser Arbeit verwendeten /Exchange Bias Systeme/ eingeführt und im nächsten Teil wird schließlich der Transport von superparamagnetischen Partikeln über eben jene /Exchange Bias Systeme/ beschrieben, wobei die auf sie wirkenden Kräfte genauer betrachtet werden sollen.
  
** Elektromagnetismus label:sec-elektromagnetismus
   CLOSED: [2019-10-10 Do 16:13]
   Allgemein gilt, dass bewegte Ladungsträger (Ströme) ein Magnetfeld erzeugen. Fließt zum Beispiel ein Strom $I$ durch einen langen geraden Draht, erzeugt dies ein kreisförmiges Magnetfeld. Entlang der Stromrichtung ergibt sich eine Rechtsschraube für das Magnetfeld B. Eine Spule besteht aus mehreren Windungen stromdurchflossenen Drahtes und erzeugt so durch Überlagerung ein Magnetfeld ähnlich eines Stabmagneten mit Nord- und Südpol. Die Magnetische Flussdichte $B$ im Vakuum hängt dabei von Stromstärke $I$ und Windungsdichte $n = \frac{N}{L}$ (Windungen pro Länge) ab. Hierbei ist $\mu_\mathrm{0}$ die magnetische Feldkonstante cite:demtroder_experimentalphysik_2017:

#+name: eq-spule
\begin{equation}
B = \mu_{\mathrm{0}} \cdot n \cdot I .
\end{equation}

*** TODO Helmholtzspulen
Für den Partikeltransport wird ein äußeres magnetisches Feld mit Hilfe von Helmholtzspulen erzeugt. Eine Helmholtzspule besteht aus zwei parallelen Ringspulen in Reihe. Diese erzeugen ein homogenes Magnetfeld in ihrem Inneren, wenn die Helmholtz-Bedingung erfüllt ist, d.h. Radius und Abstand der Teilspulen gleich sind. Die Flussdichte dieses Magnetfeldes hängt in Näherung von der Stromstärke $I$, der Windungszahl pro Spule $N$ und dem Radius einer einzelnen Spule $r$ ab cite:raith_elektromagnetismus_2006: 
    
#+name: eq-helmholtz
\begin{equation}
B = \left(\frac{4}{5}\right)^{\frac{3}{2}} \cdot \mu_{\mathrm{0}} \cdot \frac{N \cdot I}{r} .
\end{equation}

** Spulen als elektrische Bauteile label:sec-spulen
   CLOSED: [2019-10-10 Do 16:13]
Beim Anlegen einer Spannung an eine Spule, wird innerhalb dieser eine Gegenspannung induziert. Hierbei ist die induzierte Spannung
    
 #+name: eq-induktivitaet
 \begin{equation}
 U_\mathrm{ind} = - L \frac{dI}{dt} .
 \end{equation}

abhängig von der zeitlichen Änderung der Stromstärke $I$, und dem Selbstinduktionskoeffizienten, kurz Induktivität $L$. Die Selbstinduktion kann dabei wie folgt erklärt werden: Bei Anlegen einer Spannung an eine Spule fließt ein Strom. Aus diesem Strom resultiert ein Magnetfeld. Nach dem Faradayschen Induktionsgesetz entsteht in einer Spule bei Änderung des Magnetfeldes eine Induktionsspannung. Diese ist nach Lenzscher Regel der Ursache, also der angelegten Spannung, entgegen gerichtet. Diese Selbstinduktion wirkt für Wechselströme wie ein *Blindwiderstand* cite:demtroder_experimentalphysik_2017.
 
Als Folge der Selbstinduktion wird in einem Stromkreis mit Induktiviät $L$ und Widerstand $R$ in Reihe beim Einschalten der Spannungsquelle der Anstieg der Stromstärke verzögert. Eine reale Spule besitzt immer auch einen eigenen ohmschen Widerstand. Die angelegte Spannung teilt sich auf in $U_R$ über dem Widerstand und der Spannung $U_L$, die nötig ist, um der Selbstinduktion entgegen zu wirken. Dabei ist $U_{\mathrm{L}} = - U_{\mathrm{ind}}$. Für den zeitlichen Verlauf der Stromstärke $I(t)$ ergibt sich hierbei folgender exponentieller Zusammenhang mit der Zeitkonstanten $\tau = \frac{L}{R}$ cite:raith_elektromagnetismus_2006:

 #+name: eq-strom-spule
 \begin{equation}
 I(t) = I_{\mathrm{0}} \cdot (1 - e^{ -\frac{t}{\tau}})= I_{\mathrm{0}} \cdot (1- e^{ -\frac{t \cdot R}{L}}).
 \end{equation}

Der entsprechende Verlauf von Spannung und Stromstärke kann in Abbildung ref:fig-einschalten nachvollzogen werden.

Analog hierzu fällt die Stromstärke beim Abschalten nicht direkt auf Null sondern folgt auch hier wegen einer induzierten Gegenspannung einem exponentiellen Abfall mit der Zeitkonstanten $\tau$ cite:raith_elektromagnetismus_2006:

#+name: eq-auschalten
\begin{equation}
I(t) = I_{\mathrm{0}} \cdot e^{ -\frac{t}{\tau}}= I_{\mathrm{0}} \cdot e^{ -\frac{t \cdot R}{L}}.
\end{equation}

Der Abschaltvorgang ist in Abbildung ref:fig-abschalten abgebildet.

:CODE:
#+begin_src python :session einaus :results output :exports none
  import numpy as np
  import matplotlib
  matplotlib.use("Agg")
  import matplotlib.pyplot as plt
  from scipy.signal import square
  import os

  figsize = (5,5)

  def I(x,L):
      return U0 * (1 - np.exp(-x / L))

  def I_aus(x,L):
      return U0 * (np.exp(-x / L))

  L = 1 
  x = np.linspace(-0.5,3,10000) 
  U0 = square(x) * 2.5
  U0 += 2.5
  U0[0] = 0
  I = I(x,L)
  Uind = L * U0 * (x/L) * np.exp(-x/L)
  plt.clf()
  fig, axes = plt.subplots(2,1, figsize=figsize)
  axes[0].plot(x, U0, label="U0")
  axes[0].set_ylabel("U [V]")
  axes[0].set_xlabel("t")
  axes[0].tick_params(axis="x", labelbottom=False)
  axes[1].tick_params(axis="x", labelbottom=False)
  axes[0].tick_params(axis="y", labelleft=False)
  axes[1].tick_params(axis="y", labelleft=False)
  axes[0].legend()
  axes[1].plot(x, I, label="I")
  axes[1].set_ylabel("I [A]")
  axes[1].set_xlabel("t")
  axes[1].legend()

  plt.tight_layout()
  plt.savefig("./img/einschalten.png", dpi=600)

  U1 = square(x * -1)
  I2 = I_aus(x,L)
  fig,axes = plt.subplots(2,1, figsize=figsize)
  axes[0].plot(x, U1, label="U0")
  axes[0].set_ylabel("U [V]")
  axes[0].set_xlabel("t")
  axes[0].tick_params(axis="x", labelbottom=False)
  axes[1].tick_params(axis="x", labelbottom=False)
  axes[0].tick_params(axis="y", labelleft=False)
  axes[1].tick_params(axis="y", labelleft=False)
  axes[0].legend()
  I2[I2==0] = max(I2)
  axes[1].plot(x, I2, label="I")
  axes[1].set_ylabel("I [A]")
  axes[1].set_xlabel("t")
  axes[1].legend()
  plt.tight_layout()
  plt.savefig("./img/ausschalten.png", dpi=600)
  plt.close()
  "ausschalten.png"
#+end_src

#+RESULTS:

:END:

\begin{figure}
\centering
\begin{subfigure}[b]{0.4\textwidth}
\centering
\includegraphics[width=0.9\textwidth]{./img/schaltbild.png}
\caption{Schaltbild.}
\label{fig-schaltbild}
\end{subfigure}
\newline
\begin{subfigure}[b]{0.49\textwidth}
\centering
\includegraphics[width=\textwidth]{./img/einschalten.png}
\caption{Einschaltvorgang.}
\label{fig-einschalten}
\end{subfigure}
\begin{subfigure}[b]{0.49\textwidth}
\centering
\includegraphics[width=\textwidth]{./img/ausschalten.png}
\caption{Abschaltvorgang.}
\label{fig-abschalten}
\end{subfigure}
\caption{Schematische Darstellung der Stromstärke und Spannung bei Ein- und Abschaltvorgang in einem Stromkreis mit Widerstand $R$, Induktion $L$ und einer Diode um einen Weg für den Abschaltinduktionsstrom zu liefern.}
\end{figure}

** Magnetismus in Materie label:sec-magnetismus
   CLOSED: [2019-09-30 Mo 11:12]
Wie bereits in Kapitel ref:sec-elektromagnetismus erläutert, erzeugen bewegte Ladungen Magnetfelder. Eine solche bewegte Ladung ist auch das Elektron, das in einer vereinfachten Vorstellung um den Atomkern kreist. Folglich besitzen Atome ein magnetisches Moment $\mu$, welches abhängig ist von der umkreisten Fläche $A$ und dem Kreisstrom des Elektrons $I$ cite:kassing_bergmann_2005:
   
#+name:eq-moment:
\begin{equation}
\mu = I \cdot A
\end{equation}

Da Elektronen sowohl eine Bahnbewegung als auch eine Spinbewegung durchführen, existieren auch zwei magnetische Momente, jeweils abhängig von $l$ und $s$ den Quantenzahlen des Bahn- und Spindrehimpulses, $g_\mathrm{e}$ dem gyromagnetischen Verhältnis des Elektrons, $m_\mathrm{e}$ der Masse des Elektrons und $e$ der Elementarladung cite:kassing_bergmann_2005:
\\
Die Vektorsumme aus Spinmoment $\mu_\mathrm{s}$
#+name:eq-spinmoment
\begin{equation}
 \mu_\mathrm{s} = - g_\mathrm{e} \frac{\vert e \vert}{2 m_\mathrm{e}} \cdot s
\end{equation}


und Bahnmoment $\mu_\mathrm{l}$ 
#+name:eq-bahnmoment
\begin{equation}
 \mu_\mathrm{l} = - \frac{\vert e \vert}{2 m_\mathrm{e}} \cdot l
\end{equation}

ergibt sich zu dem magnetischen Gesamtmoment $\mu_j$:
#+name:eq-gesamtmoment
\begin{equation}
\mu_\mathrm{j} = \mu_\mathrm{l} + \mu_\mathrm{s}
\end{equation}

Wird Materie in eine äußere magnetische Erregung $H$ gebracht, resultiert meistens ein magnetisches Moment. Makroskopisch dient die Magnetisierung $\vec{M}$ zur Beschreibung der magnetischen Momente von Materie pro Volumeneinheit. Die Magnetisierung ist für isotrope und lineare Medien, in denen die magnetischen Momente nicht wechselwirken, proportional zum extern angelegen Magnetfeld $\vec{H}$, wobei die magnetische Suszeptibilität $\chi$ ein materialabhängiger, temperaturabhängiger dimensionsloser Proportionalitätsfaktor ist cite:kassing_bergmann_2005,nolting_grundkurs_2013:

#+name:eq-magnetisierung
\begin{equation}
\vec{M} = \chi \cdot \vec{H}
\end{equation}

Festkörper können in Folge der mikroskopischen Ursachen bezüglich ihres Magnetismus in drei Kategorien eingeordnet werden. Ein Material, in dem keine permanenten magnetischen Momente vorliegen, in dem aber in Anwesendheit eines äußeren Magnetfeldes magnetische Momente induziert werden, wird diamagnetisch genannt. Besitzt ein Material bereits ohne äußeres Magnetfeld permanente magnetische Momente, die nicht miteinander wechselwirken, so handelt es sich um einen Paramagneten. Wechselwirken die magnetischen Momente, kann dies zu einer spontanen Magnetisierung und unter anderem zu Ferro- oder Antiferromagnetismus führen cite:gross_festkorperphysik_2012.

Im Folgenden soll näher auf diese Klassifizierungen eingegangen werden.

*** Dia- und Paramagnetismus label:sec-dia-und-para
    CLOSED: [2019-09-23 Mo 11:59]
Diamagnetismus ist ein magnetischer Effekt in jeglicher Materie, welcher durch induzierte magnetische Momente auftritt. In einem externen Magnetfeld wird im Atom ein magnetisches Moment induziert, welches dem induzierenden Magnetfeld entgegen wirkt (Lenzsche Regel). Ein Festkörper wird als diamagnetisch bezeichnet, wenn ohne äußeres magnetisches Feld keine magnetischen Momente vorliegen. Vor allem abgeschlossene äußere Elektronenschalen tragen zum diamagnetischen Effekt eines Atoms bei. Die Spin- und Bahnmomente der gepaarten Elektronen heben sich in Summe auf. Diamagnetische Materialien haben eine negative Suszeptibilität und werden aus dem externen Magnetfeld heraus gedrängt cite:gross_festkorperphysik_2012.

#+name:eq-dia
\begin{equation}
\chi_\mathrm{dia} < 0
\end{equation}

# Paramagnetismus:
# ------
Ein paramagnetischer Festkörper besitzt bereits ohne äußeres Magnetfeld magnetische Momente. Jedoch ist die Richtung der magnetischen Momente durch die thermische Energie in alle Raumrichtungen verteilt, und die magnetischen Momente wechselwirken untereinander nicht. In Summe ist makroskopisch keine Magnetisierung erkennbar cite:demtroder_experimentalphysik_2017:

#+name:eq-m-para
\begin{equation}
M = \frac{1}{V} \sum \mu_\mathrm{j} = 0.
\end{equation}

Legt man ein äußeres Magnetfeld an, richten sich die magnetischen Momente nach diesem aus, und ein paramagnetischer Festkörper wird in das Magnetfeld gezogen. Es existiert auch Diamagnetismus in einem paramagnetischen Festkörper, jedoch ist dieser schwächer und der Paramagnetismus dominiert. Ein paramagnetischer Festkörper besitzt eine positive Suszeptibilität cite:gross_festkorperphysik_2012:
 
#+name:eq-susz-para
\begin{equation}
\chi_\mathrm{para} > 0
\end{equation}

*** Ferromagnetismus label:sec-ferro
    CLOSED: [2019-09-24 Di 16:42]
    
Beeinflussen sich die einzelnen magnetischen Momente gegenseitig, sind sie also gekoppelt, kann das System einen magnetisch geordneten Zustand einnehmen. Dieser geordnete Zustand unterliegt jedoch einer Temperaturabhängigkeit. Eine Ursache für das Vorliegen von kollektivem Magnetismus ist die quantenmechanische *Austausch-Wechselwirkung* cite:kassing_bergmann_2005.

Die Suszeptibilität ferromagnetischer Materialien ist um bis zu mehrere Größenordnungen größer als bei paramagnetischen Materialien cite:demtroder_experimentalphysik_2017.

\begin{figure}[h]
\centering
\begin{subfigure}[b]{0.3\textwidth}
\caption{Ferromagnetischer Festkörper.}
\includegraphics[width=\textwidth]{./img/ferro.pdf}
\label{fig-ferro}
\end{subfigure}
\quad
\begin{subfigure}[b]{0.3\textwidth}
\caption{Antiferromagnetischer Festkörper.}
\includegraphics[width=\textwidth]{./img/antiferro.pdf}
\label{fig-antiferro}
\end{subfigure}
\caption{Schematische Darstellung der magnetischen Momente innerhalb eines Weissschen Bezirkes in Festkörpern.}
\end{figure}

Die magnetischen Dipole in einem ferromagnetischen Festkörper weisen innerhalb der so genannten *Weissschen Bezirke* (auch Domänen) eine spontane Magnetisierung auf, da die Austausch-Wechselwirkung zu einer parallelen Kopplung der magnetischen Momente führt (vgl. Abbildung ref:fig-ferro). Ohne externes Magnetfeld zeigen die magnetischen Momente verschiedener Weissscher Bezirke in verschiedene Richtungen. Durch die hohe Anzahl der Weissschen Bezirke ist makroskopisch keine Magnetisierung erkennbar cite:rybach_physik_2008. Der Übergang zwischen den Weissschen Bezirken wird als Domänenwand bezeichnet, welche als *Bloch-(Domänen)wände* bezeichnet werden. Bloch-Wände bestehen aus atomaren Dipolen die sich innerhalb bzw. parallel zur Wandebene drehen cite:gross_festkorperphysik_2012. Ein zweiter möglicher Domänentyp, in dem sich die magnetischen Momente um eine Achse innerhalb der Wandebene drehen, wird *Néel-Wand* genannt. Dieser Domänenwandtyp wird in dünnen Schichten gegenüber Bloch-Domänenwänden favorisiert, wenn die Schichtdicke im Bereich der Domänenwandbreite liegt, da Néel-Wände hier energetisch günstiger sind cite:hubert_magnetic_2008. In den in dieser Arbeit verwendeten Proben liegen aufgrund der dünnen ferromagnetischen Schichten Néel-Wände vor. 

#+caption: Hysteresekurve der Magnetisierung $M$ in Abhängigkeit vom äußeren Feld $B$. Aus cite:demtroder_experimentalphysik_2017.
#+name: fig-hysterese
#+attr_latex: :placement [h] :width 0.4\textwidth
[[file:img/hysterese.png]]

Die resultierende Magnetisierung ist abhängig von vorherigen erfolgten Magnetisierungsprozessen. Abbildung ref:fig-hysterese stellt eine Hysteresekurve dar, die für das Ummagnetisierungsverhalten eines ferromagnetischen Festkörper charakteristisch ist. Wird eine vollkommen entmagnetisierte ferromagnetische Probe in ein äußeres Magnetfeld gebracht, so steigt die Magnetisierung zunächst linear. Die Weissschen Bezirke, deren magnetisches Moment bereits annähernd in Richtung des Magnetfeldes zeigen, wachsen. Die Bloch-Wände verschieben sich, da sich die atomaren Dipole drehen. Da sich alle Weissschen Bezirke aufgrund von Größe und Lage energetisch unterscheiden, klappen dann nach und nach in anderen Weissschen Bezirken zunächst die magnetischen Momente um (*Barkhausen Sprünge)*, bevor sich auch hier die Domänenwände verschieben.
Die Magnetisierung erreicht schließlich ab einem Sättigungsfeld $B_\mathrm{S}$. In diesem Zustand zeigen alle mikroskopischen magnetischen Momente in die selbe Richtung parallel zum Feld. Zu sehen ist dies in der Teilkurve a in ref:fig-hysterese welche *jungfräuliche Kurve* oder *Neukurve* genannt wird.
Wird das externe Feld wieder zurück gefahren, folgt die Magnetisierung einer neuen Kurve b. Hierbei durchläuft die Kurve den Punkt $M_\mathrm{R}$ die Restmagnetisierung, auch *Remanenz* genannt, bei $B=0$. Die Bloch-Wände sind wieder in ihren ursprünglichen Positionen, jedoch bleiben innerhalb der Domänen die parallelen Ausrichtungen der magnetischen Momente erhalten.
Wird nun das Magnetfeld weiter bis $-B_\mathrm{S}$ verringert, ergibt sich erneut eine Sättigung, in der sich nun die magnetischen Momente in die andere Richtung ausgerichtet haben. Dabei durchläuft die Magnetisierungskurve die Feldstärke $B_\mathrm{K}$, welche *Koerzitivfeldstärke* genannt wird. Dies ist die Feldstärke, welche benötigt wird, um die Restmagnetisierung aufzuheben.
Ändert sich das externe Feld nun wieder in Richtung $+B_\mathrm{S}$, zeigt sich Teilkurve c, welche wiederum in Sättigung übergeht. Die Teilkurven b und c stellen hierbei die typische *Hysteresekurve* eines ferromagnetischen Festkörpers dar, und werden immer wieder bei erneuten Umpolungen des externen Magnetfeldes durchlaufen cite:rybach_physik_2008,demtroder_experimentalphysik_2017.

Beim Ausrichten der magnetischen Dipole in einem ferromagnetischen Stoff wird Energie benötigt. Diese entspricht der Fläche, die von der Hysteresekurve eingeschlossen ist und wird beim Ummagnetisieren in Wärme umgewandelt cite:rybach_physik_2008.

Der Festkörper kann seine ferromagnetischen Eigenschaften verlieren, wenn er über eine bestimmte, für das Material charakteristische, Temperatur $T_\mathrm{C}$, die *Curie-Temperatur* erhitzt wird. Die Wärmebewegung zerstört dann die magnetische Ausrichtung der Dipole und der Stoff zeigt nur noch paramagnetisches Verhalten cite:demtroder_experimentalphysik_2017.

*** Antiferromagnetismus label:sec-antiferro
    CLOSED: [2019-09-23 Mo 12:00]
In einem Antiferromagneten liegen zwei ineinander gestellte Untergitter im Kristallgitter vor. Die magnetischen Momente jener Untergitter zeigen jeweils in entgegengesetzte Richtungen und haben den gleichen Betrag. Somit heben sie sich insgesamt auf und es ist keine makroskopische Magnetisierung sichtbar. Oberhalb der *Néel-Temperatur* $T_\mathrm{N}$, dem Analogon zur Curie-Temperatur, geht der Festkörper in den paramagnetischen Zustand über cite:demtroder_experimentalphysik_2017. 

*** Superparamagnetismus
    CLOSED: [2019-09-24 Di 16:42]
Ist das Volumen eines ferromagnetischen Festkörpers so gering, dass er nur aus einer einzelnen Domäne besteht, spricht man von Superparamagnetismus. Die Suszeptibilität solcher Superparamagneten ist größer als die Suszeptibilität von Paramagneten, jedoch verhalten sie sich ohne äußeres Magnetfeld ähnlich, da die Magnetisierung in solchen einzelnen Domänen nicht thermisch stabil ist und sich beliebig ausrichten kann cite:gross_festkorperphysik_2012.
Jedoch ist die Zeitskala des Experiments, und ob in dieser thermische Aktivierungs- und Relaxationsprozesse statt finden können, wichtig, um Aussagen über das magnetische Verhalten eines Partikels machen zu können. Bei ausreichend großen Zeitskalen wird über die durch thermische Energie unterschiedlichen magnetischen Momente gemittelt und man erhält insgesamt keine Magnetisierung. Wird jedoch sehr kurz gemessen, kann eine Richtung der Magnetisierung für diesen kurzen Zeitausschnitt bestimmt werden cite:leslie-pelecky_magnetic_1996.
    
** TODO Exchange Bias Effekt label:sec-EB
Der /Exchange Bias/ (EB) Effekt  wurde 1956 von \textsc{Meiklejohn} und \textsc{Bean} an oxidierten \ce{Co}-Partikeln entdeckt. Diese Partikel bestehen im Kern aus Cobalt, einem Ferromagneten, und besitzen eine äußere dünne \ce{CoO}-Schicht, welche antiferromagnetisch ist. Die Autoren entdeckten eine Verschiebung der Hysteresekurve um das sogenannte Austauschverschiebungsfeld $H_\mathrm{EB}$. Diese Beobachtung kann durch den Austauschverschiebungseffekt (engl. /exchange bias/) erklärt werden. Dieser tritt an der Grenzfläche zwischen antiferromagnetischer (AF) und ferromagnetischer (F) Schicht auf, wenn die Partikel innerhalb eines externen Magnetfeldes unter die Néel-Temperatur der antiferromagnetischen Schicht gekühlt wurden. cite:meiklejohn_new_1957.


Der Exchange Bias Effekt bewirkt eine unidirektionale Anisotropie in der ferromagnetischen Schicht, das heißt es wird nur eine Richtung für die Magnetisierung bevorzugt. Dies steht im Gegensatz zur sonst üblichen uniaxialen Anisotropie in Ferromagneten, welche parallele und antiparallele Ausrichtungen entlang der /leichten Achse/ der Magnetisierung favorisiert. Die Ursache für den Exchange Bias Effekt ist die quantenmechanische Austauschwechselwirkung zwischen antiferromagnetischen und ferromagnetischen Momenten an der Grenzfläche zwischen den Schichten cite:stohr_magnetism_2006. 

Ein erstes Modell zum EB-Effekt wurde von \textsc{Meiklejohn} und \textsc{Bean} geliefert. In diesem Modell wird von einer idealen ebenen Grenzfläche zwischen AF und F ausgegangen. Beide Schichten liegen befinden sich in einem eindomänigen Zustand. Der AF besitzt durch die uniaxiale /in-plane/ Anisotropie starre magnetische Momente, der F kann jedoch durch ein externes magnetisches Feld ummagnetisiert werden. Die magnetischen Momente innerhalb des AF kompensieren sich gegenseitig, an obersten Atomschicht an der Grenzfläche existieren jedoch unkompensierte magnetische Momente, so dass insgesamt eine geringe Magnetsierung resultiert. Durch die Austauschwechselwirkung zwischen F und AF an der Grenzfläche entsteht so eine unidirektionale Anisotropie cite:meiklejohn_new_1957.

Mit ausreichender Steilheit der Hysteresekurve und einer Verschiebung um das Austauschwechselfeld größer als das Koerzitivfeld, kann eine makroskopisch stabile remanente Magnetisierung bewirkt werden cite:hohler_exchange_2008.

Da der EB-Effekt ein Grenzflächeneffekt ist, ist die Stärke des Austauschwechselfeldes antiproportional zur ferromagnetischen Schichtdicke cite:hohler_exchange_2008.

Der linke und rechte Schnittpunkt der Hysteresekurve $H_\mathrm{L}$ und $H_\mathrm{R}$ werden verwendet, um die magnetische Feldstärke des Austauschwechselfeldes $H_\mathrm{EB}$, sowie das Koerzitivfeld $H_\mathrm{C}$ wie folgt zu definieren:

\begin{equation}
H_\mathrm{EB} = \frac{H_\mathrm{R}+ H_\mathrm{L}}{2} \quad H_\mathrm{C} = \frac{H_\mathrm{R} - H_\mathrm{L}}{2}
\end{equation}

Das Austauschverschiebungsfeld $H_\mathrm{EB}$ kann also aus der Verschiebung des Mittelpunktes der Hysterese von der y-Achse bestimmt werden cite:meiklejohn_new_1957. 

Einerseits kann eine unidirektionale Anisotropie durch Anwesenheit eines externen Magnetfeldes während dem epitaktischen Wachstum bewirkt werden, andererseits durch einen Feldkühlprozess, an welchem nachfolgend eine Begründung für den EB-Effekt geliefert wird: Die Hysteresekurve eines EB-Systems (Abbildung ref:fig-eb links in magenta) ist um das Austauschwechselfeld $H_\mathrm{EB}$ verschoben im Vergleich zum alleinigen Ferromagneten (grau gestrichelt). Der Grund hierfür sind die magnetischen Momente des AF an der Grenzfläche, welche durch Kopplung an die magnetischen Momente des F die magnetischen Momente im F daran hindern sich zu drehen. Während des Feldkühlprozesses wird die Probe auf eine Temperatur zwischen Néel-Temperatur und Curie-Temperatur gebracht, hier verhält sich der AF paramagnetisch, während der F weiterhin seine ferromagnetischen Eigenschaften behält, sodass seine Magnetisierung innerhalb des externen Feldes gezielt ausgerichtet werden kann (Abb. ref:fig-eb rechts oben). Anschließend wird die Temperatur unter die Néel-Temperatur verringert. Die magnetischen Momente im AF koppeln an der Grenzfläche an die magnetischen Momente des gesättigten Ferromagneten (Abb. ref:fig-eb rechts unten). So wird eine magnetische Ordnung hergestellt, welche die unidirektionale Anisotropie im Ferromagneten bewirkt cite:merkel_einfluss_2018.

Durch die Polykristallinität der in dieser Arbeit verwendeten Proben müssen diese im Feldkühlprozess statt auf die Néel-Temperatur $T_\mathrm{N}$ nur auf die niedrigere materialabhängige *Blocking-Temperatur* $T_\mathrm{B}$ erhitzt werden. Die AF-Körner der polykristallinen Schicht verhalten sich hier superparamagnetisch cite:ogrady_new_2010,bean_superparamagnetism_1959.

#+name: fig-eb
#+caption: Schematische Darstellung der ferromagnetischen Hysteresekurve eines EB-Systems in Abhängigkeit des externen Magnetfeldes parallel zur leichten Achse der unidirektionalen Anisotropie (links) und schematische Darstellung des Feldkühlprozesses zur Herstellung des EB-Effektes (rechts) cite:merkel_einfluss_2018.
#+attr_latex: :width \textwidth :placement [!h]
#+attr_org: :width 50px
[[file:img/eb.png]]

Um in einem, wie in dieser Arbeit verwendeten polykristallinen System ein Austauschwechselfeld zu bewirken, wird 

Durch Helium-Ionenbeschuss kann der EB-Effekt eines Schichtsystems verändert werden. So kann zum Beispiel die Richtung des Austauschverschiebungsfeldes lokal umgekehrt werden cite:mougin_local_2001. Hierzu kann eine Schattenmaske mittels Lithographie auf die Probe gebracht werden, um anschließend lokal das Eindringen von Ionen zu verhindern. Dies ermöglicht die magnetische Strukturierung von EB-Systemen, zum Beispiel in einer /in-plane/ Anisotropie, welche zu /head-to-head/ und /tail-to-tail/-Domänenwänden in einer Streifenstruktur führt, womit wiederum Transport von superparamagnetischen Partikeln realisiert werden kann cite:holzinger_directed_2015.

** TODO Partikeltransport label:sec-partikeltransport
Superparamagnetische Partikel (SPP) lassen sich durch Verwendung von den zuvor beschriebenen streifenstrukturierten (hh und tt) EB-Systemen in kontrollierten Abständen zum Substrat und in geordneter Reihenform transportieren. Dabei setzt sich das effektive Magnetfeld, das die Partikel erfahren, aus der Magnetfeldlandschaft des Exchange-Bias Systems und dem externen Magnetfeld zusammen cite:holzinger_directed_2015:
 
\begin{equation}
\vec{H}_\mathrm{eff} = \vec{H}_\mathrm{MFL} + \vec{H}_\mathrm{ext}.
\end{equation}

Bei der Verwendung superparamagnetischer Partikel werden diese innerhalb des effektiven Magnetfeldes aufmagnetisiert, so dass benachbarte Partikel parallele Magnetisierungen aufweisen, was zu ihrer magnetostatischen Abstoßung führt und die Agglomeration der Partikel verhindert. Außerdem können die Partikelgeschwindigkeiten durch Modifikation am EB-System doer externen Magnetfeld beeinflusst werden cite:holzinger_directed_2015.

Werden SPP in wässriger Lösung ohne externes Magnetfeld auf das EB-Substrat gegeben, so positionieren sie sich in einem Gleichgewichtsabstand in Reihen über den Domänenwänden, da die Minima der potentiellen Energie der SPP an der Position der größten Streufelddichte liegt. Diese Minima sind ohne externes Magnetfeld über sowohl /head-to-head/ (hh) als auch /tail-to-tail/ (tt) Domänenwänden vorhanden (vgl. Abbildung ref:fig-mfl), wobei deren Entartung durch die Hinzunahme eines zusätzlichen externen Magnetfeldes durch die Superposition zum effektiven Magnetfeld aufgehoben wird cite:holzinger_directed_2015.

#+name:fig-mfl
#+caption: Schematische Darstellung der potentiellen Energielandschaft $U_\mathrm{SPP,z(x,y)}$ superparamagnetischer Partikel über einer EB-Streifendomänenstruktur. Das magnetische Moment der Partikel ist parallel zur Magnetfeldlandschaft ausgerichtet und die Partikel befinden sich in Reihen über den /head-to-head/ (hh) und /tail-to-tail/ (tt) Domänenwänden. Aus cite:holzinger_transport_2015.
#+attr_latex: :width \textwidth :placement [h]
#+attr_org: :width 100px
[[file:img/mfl.png]]

Ausgehend von der Positionierung der SPP in Reihen über alle Domänenwände verteilt, erfolgt der Transport von superparamagnetischen Partikeln über EB-Systeme erfolgt durch zeitliche Veränderungen der magnetischen Potentiallandschaft über der Probe (vgl. Abbildung ref:fig-mfl). Der genaue Transportvorgang kann in Abbildung ref:fig-transport nachverfolgt werden. Durch Einschalten des Magnetfeldes $H_\mathrm{z}$ wird die effektive Magnetfeldlandschaft über den Domänenwänden verändert. hh-Domänenwände werden energetisch begünstigt und die Partikel bewegen sich ungeleitet in Richtung dieser (a). So bilden sich Reihen aus SPP, welche jeweils die doppelte Domänenbreite voneinander entfernt sind. Der Vorzeichenwechsel von $H_\mathrm{x}$ bewirkt eine Verschiebung der Magnetfeldlandschaft in x-Richtung, welche das magnetische Moment der SPP leicht in Richtung nächster Domänenwand kippt und einen kleinen Transportschritt bewirtk (b). Nach erneuter Umpolung von $H_\mathrm{z}$ dreht sich das magnetische Moment in die entgegengesetzte Richtung, da das Partikel durch den kleinen Transportschritt eine Vorzugsrichtung hat, in die es sich bewegt. Ohne die x-Komponente des externen Magnetfeldes würden die Partikel zufällig in eins der beiden benachbarten Energieminima während der Umpolung von $H_\mathrm{z}$ wandern. Die Minima der Energielandschaft verschieben sich auf die nächstgelegene Domänenwand, da nun statt hh-Domänenwänden die tt-Domänenwände energetisch günstiger sind (c). Anschließend wird der Prozess mit umgekehrten Vorzeichen durchgeführt (d) und die Partikel befinden sich dann erneut über einer hh-Domänenwand (e) cite:holzinger_directed_2015. 

Auf SPP in mikrofluidischer Umgebung über einem EB-System wirken verschiedene Kräfte (vgl. Abbildung ref:fig-force_spp). Dabei sind die Oberflächenkräfte dafür verantwortlich, dass die Partikel trotz ihrer Masse nicht auf die Oberfläche sedimentieren.  Stattdessen stellt sich ein Gleichgewichtsabstand zur Probe ein, da van-der-Waals-Kräfte $F_\mathrm{vdw}$ und magnetostatische Kraft $F_\mathrm{m}$ anziehend und elektrostatische Kraft $F_\mathrm{e}$ abstoßend wirken. In diesem Abstand bewegen sich die SPP nach einer Beschleunigungsphase mit der Dauer von circa $\SI{200}{\nano\s}$ mit einer Gleichgewichtsgeschwindigkeit $\vec{v}_\mathrm{SPP}$. Diese stellt sich nach Erreichen des Kräftegleichgewichts zwischen magnetischer Kraft $F_\mathrm{SPP}$ und Stokesscher Reibungskraft $F_\mathrm{R}$ ein.

Die Reibungskraft
\begin{equation}
F_\mathrm{R} = 6 \cdot \pi \cdot r_\mathrm{SPP} \cdot \eta_\mathrm{L} \cdot f_\mathrm{R}(z,r_\mathrm{SPP}) \cdot \vec{v}_\mathrm{SPP}(x,y)
\end{equation}
ist abhängig von dem Radius der Partikel $r_\mathrm{SPP}$, der Viskosität der Flüssigkeit $\eta_\mathrm{L}$ und dem Reibungskoeffizienten $F_\mathrm{R}$ der Partikel.

Die magnetische Kraft
\begin{equation}
F_\mathrm{SPP} = \mu_0 \cdot (\vec{m}_\mathrm{SPP}(x,z) \cdot \vec{\nabla}) \cdot \vec{H}_\mathrm{eff}(x,z)
\end{equation}
ist abhängig von dem magnetischen Sättigungsmoment $m_\mathrm{SPP}$ der Partikel und dem effektiven Magnetfeld $\vec{H}_\mathrm{eff}$.

Folglich kann die Gleichgewichtsgeschwindigkeit wie folgt berechnet werden cite:holzinger_transport_2015: 
\begin{equation}
\vec{v}_\mathrm{SPP} (x,z) =
\frac{ \mu_0 \cdot (\vec{m}_\mathrm{SPP}(x,z) \cdot \vec{\nabla}) \cdot \vec{H}_\mathrm{eff}(x,z)}
{6 \cdot \pi \cdot r_\mathrm{SPP} \cdot \eta_\mathrm{L} \cdot f_\mathrm{R}(z,r_\mathrm{SPP})}
\end{equation}

#+name:fig-force_spp
#+caption: Schematische Darstellung der wirkenden Kräfte auf ein superparamagnetisches Partikel oberhalb des EB-Dünnschichtsystems. Zu sehen sind van-der-Waals-Kraft $F_\mathrm{vdw}$, elektrostatische Kraft $F_\mathrm{e}$, magnetostatische Kraft $F_\mathrm{m}$, Reibungskraft $F_\mathrm{R}$ und magnetische Kraft $F_\mathrm{SPP}$. Diese resultieren zusammen jeweils in die Gleichgewichtsgeschwindigkeit $v_\mathrm{SPP}$ und den Gleichgewichtsabstand $z$. Die Längen der Kraftvektoren sind zu Anschauungszwecken arbiträr gewählt.
#+attr_latex: :width 0.75\textwidth :placement [h]
[[file:img/force_spp.png]]


#+name:fig-transport
#+caption: (a-e): Berechnete magnetische Potentiallandschaft $U_\mathrm{SPP,z(x)}$ als Funktion der x-Position im Partikelzentrum $\SI{2}{\mu\meter}$ über dem EB-System. Die superparamagnetischen Partikel sind schematisch in braun dargestellt. (f): Angelegte Magnetfeldsequenzen. Die Zeitskala der Magnetfeldsequenzen ist passend zu den Darstellungen der Potentiallandschaften zu verschiedenen Zeiten aufgetragen. Aus cite:holzinger_transport_2015.
#+attr_latex: :width \textwidth :placement [h]
#+attr_org: :width 100px
[[file:img/trapez.png]]

* TODO Experimentelle Methoden label:sec-methoden
  
** TODO Experimenteller Aufbau label:sec-aufbau

Um den Transport von superparamagnetischen Partikeln über das Substrat zu realisieren und zu beobachten, wurde der Versuchsaufbau, der in Abbildung ref:img-aufbau zu sehen ist, verwendet.

#+caption: Partikeltransport Versuchsaufbau. Erleuterungen findne sich im Text.
#+attr_latex: :width \textwidth
#+name: img-aufbau
file:./img/aufbau.png

Dieser Versuchsaufbau kann in zwei Teile unterteilt werden. Der erste Teil besteht aus einer Optronis Hochgeschwindigkeitskamera (1), welche durch ein Mikroskop (2) die Partikelbewegung in Videos aufzeichnet. Zur Belichtung der Probe wird eine Weißlicht-LED (3) verwendet. Die Position der Kamera über der Probe, und somit der Fokus des Mikroskops wird über einen Schrittmotor (4) verändert, welcher von einem LabView-Programm über eine NI USB-6002 Box (im Folgenden /DAQ/ für /Data Acquisition/) (5) gesteuert wird. Der zweite Teil zur Erzeugung der Magnetfeldsequenzen im Partikeltransportexperiment. Er besteht aus drei senkrecht zueinander stehenden Helmholtzspulen (6), in deren Mitte ein beweglicher Probentisch liegt. Hiermit können Magnetfelder für alle drei Raumdimensionen erzeugt werden. Die Helmholtzspulen werden über ein spannungsgesteuertes Netzteil (7) mit Strom versorgt, welches wiederum von einer NI USB-6002 Box (DAQ) (8) über ein Python-Programm (siehe Kapitel ref:sec-py) angesteuert wird. So können beliebige Magnetfeldsequenzen im Inneren der Helmholtzspulen realisiert werden. Die Helmholtzspulen bestehen aus gewickeltem Kupferdraht, nähere Daten können Tabelle ref:tab-spulen entnommen werden.

#+caption: Technische Daten Helmholtzspulen. Windungen, Radius, Widerstand und Länge wurden der technischen Zeichnung entnommen, die Induktivität wurde gemessen.
#+attr_latex: :center t :align nil
#+name: tab-spulen
| Name | Windungen | Radius\nbsp[\si{\meter}] | Widerstand\nbsp[\si{\ohm}] | Länge\nbsp[\si{\milli\meter}] | Induktivität\nbsp[\si{\milli\henry}] |
|------+-----------+----------------------+------------------------+---------------------------+----------------------------------|
| /    | <         | <                    | <                      | <                         | <                                |
| x    | \num{360} | \num{0,047}          | \num{18,2}             | \num{65}                  | \num{9,29}                       |
| y    | \num{936} | \num{0,069}          | \num{51,6}             | \num{95}                  | \num{57,9}                       |
| z    | \num{330} | \num{0,030}          | \num{11,5}             | \num{70}                  | \num{5,6}                        |


Bei den Versuchen in dieser Arbeit wurden nur zwei der drei Helmholtzspulen verwendet. Dabei handelte es sich um die Spulen für die x- und z-Richtung. Die Partikel wurden in einer mikrofluidischen Zelle auf den Proben platziert, um dann untersucht werden zu können. Hierfür wird Parafilm zuerst in Größe der Probe zurecht geschnitten, und dann ein Rechteck im Inneren des Parafilms ausgeschnitten. So entsteht eine Aussparung in der Mitte, in die circa \SI{10}{\micro\litre} Partikelsuspension gegeben werden. Anschließend wird die Probe auf dem Probentisch platziert, die LED eingeschaltet, und die Kamera mittels Livebild auf die Partikel fokussiert.

** TODO Programm zur Erstellung von Magnetfeldsequenzen label:sec-py
Um die in dieser Arbeit benötigten externen Magnetfelder zu erzeugen, wurde ein neues Programm in Python entwickelt, mit dessen Hilfe verschiedene Wellenformen als Magnetfeld ausgegeben werden können. Hierbei stand ein modularer Ansatz im Vordergrund, weshalb durch einfache Änderungen am Programmcode andere Geräte im Aufbau verwendet werden können. So kann zum Beispiel ein anderes Netzteil verwendet werden, um dann auch drei Helmholtzspulen für Magnetfelder in drei Dimensionen anzusteuern. Ziel war es sowohl sinus- und rechteckförmige Magnetfelder, als auch die für diese Arbeit benötigten trapezförmigen Magnetfelder erzeugen zu können. Dabei ist es möglich jeden Parameter der Wellenform zu ändern, und die Magnetfeldsequenzen als Plot dargestellt zu sehen. Abbildung ref:fig-prog zeigt einen Screenshot der graphischen Benutzeroberfläche des Programms.

Mit der in dieser Arbeit entwickelten ersten Version des Programms ist es bisher nur möglich, die Spannungsausgabe des DAQ-Gerätes an das jeweilige verwendete Netzteil zu steuern und anzuzeigen. In Zukunft soll es jedoch möglich sein bereits das entstehende Magnetfeld im Programm auszuwählen und angezeigt zu bekommen. Hierzu wurden zunächst die verwendeten Spulen und das Netzteil charakterisiert (siehe Kapitel ref:sec-stromundmagnet).

#+name:fig-prog
#+caption: Screenshot des entwickelen Programms zur Erstellung von beliebigen Magnetfeldsequenzen. Rechts dargestellt werden zwei trapezförmige Spannungen, die so von dem DAQ-Gerät an das Netzteil ausgegeben werden können. Die Schaltfläche "Trigger Camera" ist noch nicht mit einer Funktion belegt (siehe Ausblick in Kapitel ref:sec-zusammenfassung)
#+attr_latex: :width \textwidth :placement [H]
[[file:img/prog.png]]

** TODO Zeitabhängige Messung von Strom und magnetischer Flussdichte label:sec-stromundmagnet
Um das Verhalten der im Experiment verwendeten Helmholtzspulen nachvollziehen zu können und um die gegebenen technischen Daten und Modelle zu Überprüfen, wurden Messungen des Magnetfeldes und des Stromes an eben jenen Spulen durchgeführt.

Hierfür wurde einerseits der zeitliche Verlauf der Stromstärke in der Spule gemessen, um Induktivität und ohmschen Widerstand zu überprüfen. Es wurde ein Keramikwiderstand in Reihe mit der zu messenden Helmholtzspule angebracht. Über diesem Messwiderstand $R$ wurde nun die Spannung $U$ gemessen, indem eine NI USB-6002 Box (im folgenden /DAQ/ für /Data Acquisition/) parallel dazu angeschlossen wurde. Dieses DAQ-Gerät besitzt eine maximale Samplerate von \SI{50000}{\per\s} und eine Bittiefe von 16-bit am /Analog Input/ (AI). Damit ist dieses Gerät hinreichend geeignet für Erfassung der Messdaten. Mithilfe des Ohmschen Gesetzes lässt sich so der Strom $I$, der durch den bekannten Messwiderstand $R$ fließt, berechnen. Da Spule und Messwiderstand in Reihe geschaltet sind, fließt durch beide die selbe Stromstärke.

#+name: fig-strommessung-aufbau
#+caption: Schematisches Schaltbild zur zeitlich aufgelösten Strommessung am Aufbau.
#+attr_latex: :width 0.7\textwidth :placement [h]
[[file:img/strommessung.pdf]]

Um den zeitlichen Verlauf der magnetischen Flussdichte zu messen, wurde der Messkopf eines Teslameters auf dem Probentisch zwischen den Helmholtzspulen platziert. Das FM210 Teslameter der /Projekt Elektronik GmbH/ besitzt einen BNC-Anschluss, über welchen widerum ein DAQ-Gerät an einem AI angeschlossen wurde, um den zeitlichen Verlauf der magnetischen Flussdichte aufzuzeichnen.

Die Aufzeichnung der Daten des DAQ-Gerätes erfolgte für beide Messungen mittels eines selbst geschriebenen Python-Scriptes (siehe Anhang [[ref:anh-messung]]).

* TODO Ergebnisse und Diskussion label:sec-ergebnisse
Allgemein kann die Auswertung in zwei Teile unterteilt werden.
Zu Beginn der Auswertung wird in Kapitel ref:sec-b_helmholtz auf Messungen von Stromstärke und magnetischer Flussdichte an den im Experiment verwendeten Helmholtzspulen eingegangen. Diese Messungen werden zum einen benötigt um das Programm zur Erstellung von Magnetfeldsequenzen zukünftig sinnvoll weiter entwickeln zu können. Weiterhin ist die Kentniss über den realen zeitlichen Verlauf der angelegten Magnetfeldsequenzen wichtig, um die Simulationen und Vorhersagen aus dem theoretischen Modell zum Partikeltransport einordnen, diskutieren und möglicherweise optimieren zu können. Es wurden sowohl statische Messungen der Amplitude der magnetischen Flussdichte als auch der zeitliche Verlauf der magnetischen Flussdichte in Abhängigkeit der Stromstärke durchgeführt.

Anschließend wird Kapitel ref:sec-partikelgeschwindigkeiten der Einfluss der Änderungsrate der trapezförmigen Magnetfeldsequenzen auf die Partikelgeschwindigkeiten näher betrachtet. Hierzu werden außerdem die Auswirkungen der verschiedenen Pulsformen auf die Trajektorien der Partikel genauer untersucht und mit simulierten Werten verglichen. In beiden Fällen wird sich auf ein strukturiertes EB-System mit \SI{5}{\mu\meter} breiten Domänen in hh- und tt-Konfiguration und dem standardmäßig in der Arbeitsgruppe \textsc{Ehresmann} verwendeten Schichtssystem $\ce{ Cu(\SI{10}{\nano\meter}) / IrMn(\SI{30}{\nano\meter}) / CoFe(\SI{10}{\nano\meter}) }$ mit einer \SI{800}{\nano\meter} \ce{Si}-Deckschicht (siehe Abbildung ref:fig-layer).

#+name: fig-layer
#+caption: Zusammensetzung der verwendeten Schichtsysteme. Die obere Siliziumschicht wurde erst nach der magnetischen Strukturierung der Probe abgeschieden. Modifiziert aus cite:janzen_fernsteuerbarer_2018.
#+attr_latex: :width 0.3\textwidth :placement [h]
#+attr_org: :width 100px
[[file:img/layer.png]]

** TODO Stromstärke und magnetische Flussdichte der Helmholtzspulen label:sec-b_helmholtz
Um die verwendeten Helmholtzspulen näher charakterisieren zu können, wurde zunächst der Zusammenhang zwischen der am Netzteil angelegten Spannung und der die Spulen durchfließenden Stromstärke sowie der daraus resultierenden Flussdichte bestimmt.

Zuerst wurde der Zusammenhang zwischen den Amplituden der Stromstärke $I$ und magnetischen Flussdichte $B$ gemessen. Dabei wurde die Stromstärke an einem in Reihe geschalteten Multimeter abgelesen, die magnetischen Flussdichte an einem Teslameter der Firma /Projekt Elektronik GmbH/, dessen Messkopf sich in der Probenhalterung der Helmholtzspulen zur Messung des Magnetfeldes in z-Richtung befand. Der Zusammenhang von Stromstärke und magnetischer Flussdichte sollte gemäß Gleichung ref:eq-spule linear sein, weshalb die Messwerte in Abbildung ref:fig-magnetfeldstrom durch eine lineare Regression angenähert wurden.

:TABLE:
#+name: Zusammenhang zwischen magnetischer Flussdichte und Stromstärke. Hierbei wurde die Spannung an der NI USB-6002 Box erhöht und dazugehörige Stromstärke am Netzteilausgang $I$ und magnetische Flussdichte im inneren der z-Spule $B_\mathrm{z}$ gemessen.
#+attr_latex: :center t :align nil
| $U_\mathrm{DAQ}\nbsp[\si{\volt}]$ | $I\nbsp[\si{\ampere}]$ | $B_\mathrm{z}\nbsp[\si{\milli\tesla}]$ |
|                            / |                  < |                                 < |
|                          0.1 |              0.079 |                              0.73 |
|                          0.2 |              0.158 |                              1.53 |
|                          0.3 |              0.238 |                              2.29 |
|                          0.4 |              0.317 |                              3.15 |
|                          0.5 |              0.396 |                              3.95 |
|                          0.6 |              0.476 |                              4.78 |
|                          0.7 |              0.555 |                              5.59 |
|                          0.8 |              0.635 |                              6.41 |
|                          0.9 |              0.714 |                              7.23 |
|                          1.0 |              0.793 |                              8.05 |
|                          1.1 |              0.873 |                              8.88 |
|                          1.2 |              0.953 |                              9.70 |
|                          1.3 |              1.032 |                             10.52 |
|                          1.4 |              1.111 |                             11.36 |
|                          1.5 |              1.191 |                             12.20 |
|                          1.6 |              1.271 |                             13.01 |
|                          1.7 |               1.35 |                             13.85 |
|                          1.8 |               1.43 |                             14.69 |
|                          1.9 |              1.509 |                             15.52 |
|                          2.0 |              1.588 |                             16.35 |

:END:

:CODE:

#+begin_src python :session magnetfeld :results output :exports none
  import numpy as np
  import pandas as pd
  import matplotlib
  matplotlib.use("Agg")
  import matplotlib.pyplot as plt
  import scipy.stats
  import scipy.constants as constants

  csv = pd.read_csv("B(I).CSV", sep=";", index_col=False)
  plt.clf()
  x=csv['Netzteil [A]'].to_numpy()
  x = np.insert(x, 0, 0)
  xerr = np.full(len(x), 0.001)
  B=csv['Teslameter [mT]'].to_numpy()
  B = np.insert(B, 0, 0)
  Berr = np.full(len(B), 0.01)
  plt.xlabel("$I$ [A]")
  plt.ylabel("$B_\mathrm{z}$ [mT]")
  slope, intercept, r, p, stderr = scipy.stats.linregress(x, B)
  plt.plot(x, slope * x + intercept, 'r--', label="lin. Regression m={:2.2f} mT/A, b={:2.2f} mT, R^2={:2.5f}".format(slope, intercept, r**2))
  # plt.errorbar(x, B, xerr=xerr, yerr=Berr, capsize=3, label="Messwerte")
  plt.plot(x, B, '.', label="Messwerte")
  plt.grid()
  plt.legend()
  plt.savefig("./img/B(I).png", dpi=100)
  "./img/B(I).png"
#+end_src 

#+RESULTS:

:END:

Um die Validität der Näherung für die magnetische Flussdichte von Helmholtzspulen in Abhängigkeit der Stromstärke für die verwendeten Spulen zu überprüfen, wurde Gleichung ref:eq-helmholtz verwendet, um die zu erwartende magnetische Flussdichte zu berechnen. Der Vergleich zwischen gemessenen und berechneten Werten ist in Abbildung ref:fig-b_helmholtz zu sehen.

:CODE:
#+begin_src python :session magnetfeld :results file :export none
  def B_helmholtz(I, c):
      n = 330
      r = 0.030
      B = constants.mu_0 * (8* I * n)/(np.sqrt(125)*r) + c
      return B
  B_calc = B_helmholtz(x, c=0) * 1000 # *1000 for mT
  plt.clf()
  ax1 = plt.subplot(1,1,1)
  ax1.plot(x, B, label="Messwerte")
  ax1.plot(x, B_calc, label="Berechnete Werte")
  ax1.set_ylabel("$B_\mathrm{z}$ [mT]")
  ax1.set_xlabel("$I$ [A]")
  ax1.legend()
  plt.grid()
  plt.tight_layout()
  plt.savefig("./img/B_calc.png", dpi=100)
  plt.close()
  "./img/B_calc.png"
#+end_src

#+RESULTS:
[[file:./img/B_calc.png]]

#+begin_src python :session magnetfeld :results output
  m_mess = constants.mu_0 * (8 * 330)/(np.sqrt(125)*0.030)
  print(m_mess)
#+end_src

#+RESULTS:
: 0.009890939141305344

:END:

\begin{figure}[h]
\begin{subfigure}[t]{0.5\textwidth}
\includegraphics[width=\textwidth]{img/B(I).png}
\caption{Messung der magnetischen Flussdichte in z-Richtung $B_\mathrm{z}$ in Abhängigkeit der Stromstärke am Netzteil $I$. Die Messwerte sind blau dargestellt, eine lineare Regression über diese in rot. Fehlerbalken sind aufgrund der Sichtbarkeit des niedrigen Fehlers nicht dargestellt.}
\label{fig-magnetfeldstrom}
\end{subfigure}%
\begin{subfigure}[t]{0.5\textwidth}
\includegraphics[width=\textwidth]{img/b_calc.png}
\caption{Vergleich von gemessener und mit Näherung aus Gleichung \ref{eq-helmholtz} berechneter magnetischen Flussdichte in z-Richtung.}
\label{fig-b_helmholtz}
\end{subfigure}
\caption{Magnetische Flussdichte in Abhängigkeit der Stromstärke. Messungen und lineare Regression.}
\end{figure}

Mit Gleichung ref:eq-helmholtz, kann der Proportionalitätsfaktor $m$ der Regression mithilfe von gegebenem Radius $r$ und Windungszahl $N$ berechnet werden, was hier exemplarisch für die Spulen zur Magnetfelderzeugung in z-Richtung gezeigt ist:

\begin{equation}
B = \left(\frac{4}{5}\right)^{\frac{3}{2}} \cdot \mu_{\mathrm{0}} \cdot \frac{N}{r} \cdot I = m \cdot I.
\end{equation}

\begin{equation}
m_\mathrm{calc} = \left(\frac{4}{5}\right)^{\frac{3}{2}} \cdot 4\pi \cdot 10^{-7}\si{\newton\per\square\ampere} \cdot \frac{330}{\SI{0.03}{m}} = \SI{0.00989}{\tesla\per\ampere} = \SI{9.89}{\milli\tesla\per\ampere}
\end{equation}

Die Steigung aus der linearen Regression beträgt $m_\mathrm{reg} = \SI{10.34}{\milli\tesla\per\ampere}$, die berechnete Steigung $m_\mathrm{calc} = \SI{9.89}{\milli\tesla\per\ampere}$. Dies entspricht einem relativen Fehler von $$ \frac{m_\mathrm{calc}}{m_\mathrm{reg} -m_\mathrm{calc}} = 0.045 .$$
Anhand von Abbildung ref:fig-b_helmholtz und der berechneten Abweichung zwischen dem rechnerisch ermittelten und dem Proportionalitätsfaktor $m$ aus der Regression der Messwerte wird deutlich, dass die Näherung für höhere Stromstärken nicht hinreichend genügt. Jedoch liegen die standardmäßig im Partikeltransportexperiment benötigten magnetischen Flussdichten im Bereich von unter \SI{8}{\milli\tesla}, weswegen die Näherung in Zukunft im Partikeltransport Programm verwendet werden könnte, um die Amplitude der entstehenden magnetischen Flussdichte bereits im Voraus zu berechnen.

Um das in Kapitel ref:sec-spulen beschriebene Anschaltverhalten von Spulen für die im Experiment verwendeten Spulen zu charakterisieren, wurde der zeitliche Verlauf der Stromstärke unter Verwendung des Aufbau aus Kapitel ref:sec-stromundmagnet bestimmt.

Dazu wurden mit dem Programm aus Kapitel ref:sec-py jeweils 10 Sekunden lang eine Rechteckspannung mit zwei verschiedene Amplituden angelegt. Da gegenwärtig für das Experiment meist nur zwei der drei Helmholtzspulen gleichzeitig verwendet werden, wurden die Spulen für die Magnetfeldgeneration entlang der x- und z-Richtung verwendet, die der Einfachheit halber im Folgenden auch als x- und z-Spule bezeichnet werden. Dies ergibt die in Abbildung ref:fig-stromraw sichtbaren Messreihen.

:CODE:
 
#+begin_src python :session strom :exports none :results output
  import matplotlib
  matplotlib.use("agg")
  import matplotlib.pyplot as plt
  import numpy as np
  import pandas as pd

  file1 = "./Messung/I/x/2mT_square_0.csv"
  file2 = "./Messung/I/z/2mT_square_0.csv"
  file3 = "./Messung/I/x/3mT_square_0.csv"
  file4 = "./Messung/I/z/3mT_square_0.csv"
  B_file1 = "./Messung/B/x/2mT_square_0.csv"
  B_file2 = "./Messung/B/x/3mT_square_0.csv"
  B_file3 = "./Messung/B/z/2mT_square_0.csv"
  B_file4 = "./Messung/B/z/3mT_square_0.csv"


  datalist = [
      pd.read_csv(file1).to_numpy() / 10,
      pd.read_csv(file2).to_numpy() / 10,
      pd.read_csv(file3).to_numpy() / 10,
      pd.read_csv(file4).to_numpy() / 10] # / 10 for current from voltage

  # Anfang und Ende abschneiden
  sr = 48000
  for i, data in enumerate(datalist):
      end = np.argmax(data>0.025)
      if i == 0:
          sr_off = sr + 20
          end_off = end - 1
      elif i == 1:
          sr_off = sr + 19
          end_off = end - 1
      elif i == 2:
          sr_off = sr + 20
          end_off = end + 11
      elif i == 3:
          sr_off = sr + 19 
          end_off = end - 0
      else:
          sr_off = 0
          end_off = 0
      data = data[end_off:end_off+10*(sr_off)]
      datalist[i] = data

  fig, ax = plt.subplots(2,2, sharex=True, sharey="row")
  ax[0,0].plot(datalist[0]) #, '.', markersize=4)
  ax[0,1].plot(datalist[1]) #, '.', markersize=4)
  ax[1,0].plot(datalist[2]) #, '.', markersize=4)
  ax[1,1].plot(datalist[3]) #, '.', markersize=4)
  ax[0,0].set_title("x")
  ax[0,1].set_title("z")
  ax[0,0].set_ylabel("$I$ [A]")
  ax[1,0].set_ylabel("$I$ [A]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[1,1].set_xlabel("Datenpunkte")
  ax[1,1].set_xticks(np.arange(0,500000,step=150000))
  plt.tight_layout()
  plt.savefig("./img/strom.png", dpi=100)
  plt.close()
  "./img/strom.png"
#+end_src

#+RESULTS:

:END:

#+name: fig-stromraw
#+caption: Zeitlicher Verlauf der Stromstärke in den Spulen für x- und z-Richtung. Links Messungen unterschiedlicher Amplitude an der x-Spule, rechts Messungen unterschiedlicher Amplitude an der z-Spule.
#+attr_latex: :width \textwidth :placement [H]
[[file:img/strom.png]]
 
Um eine Aussage über die Änderungsrate (Steigung) der Stromstärke und somit in direkter Konsequenz auch des Magnetfeldes machen zu können, ist es vorteilhaft das Verhalten für eine einzelne Periode zu betrachten. Dazu wurde der über alle zehn Perioden gemittelt. Diese gemittelten Messwerte sind zu sehen in Abbildung ref:fig-stromavg.

:CODE:

#+begin_src python :session strom :results output
  # in 10 Perioden schneiden:
  n_periods = 10
  avglist = []
  for i, data in enumerate(datalist):
      periodic = data.reshape(n_periods, (len(data)//n_periods))
      avg = periodic.mean(axis=0)
      avglist.append(avg)
  plt.clf()
  fig, ax = plt.subplots(2,2, sharex=True, sharey="row")
  ax[0,0].set_title("x")
  ax[0,0].set_ylabel("$I$ [A]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[0,0].plot(avglist[0], '.', markersize=3)
  ax[0,1].plot(avglist[1], '.', markersize=3)
  ax[1,0].plot(avglist[2], '.', markersize=3)
  ax[1,1].plot(avglist[3], '.', markersize=3)
  ax[0,1].set_title("z")
  ax[1,0].set_ylabel("$I$ [A]")
  ax[1,1].set_xlabel("Datenpunkte")
  ax[0,0].set_xticks(np.arange(0,50000,15000))
  plt.tight_layout()
  plt.savefig("./img/strom_avg.png", dpi=100)
  "./img/strom_avg.png"

#+end_src

#+RESULTS:

:END:

#+name: fig-stromavg
#+caption: Über alle zehn Perioden gemittelter zeitlicher Verlauf der Stromstärke für x- und z-Richtung. Links sind jeweils Stromstärkenmessungen für die x-Spule dargestellt, rechts Messungen der z-Spule.
#+attr_latex: :width \textwidth :placement [H]
[[file:img/strom_avg.png]]

Vor allem für die Strommessungen der x-Spule sieht man klar eine Stromspitze zu Beginn der Plateaus. Dies ist wahrscheinlich auf das spannungsgesteuerte Netzteil zurückzuführen, welches einen konstanten Strom erzeugen soll. Jedoch ist durch die Impedanz der Spule bei abrupten Änderungen des Stromes ein hoher Blindwiderstand vorhanden, welcher durch das Netzteil versucht wird zu kompensieren. Da der Blindwiderstand dann wieder sinkt "übersteuert" das Netzteil und erreicht eine höhere Stromstärke als eigentlich angestrebt. Da sich die Stromstärke im Plateau zunächst nicht mehr ändert, passt das Netzteil den Ausgangsstrom an, und erreicht die gewünschte Amplitude.

Da vor allem das Einschaltverhalten der Spulen von Interesse ist, wurde der Beginn der Perioden, in dem die Stromstärke auf das Maximum ansteigt, genauer betrachtet. Zu sehen sind diese in Abbildung ref:fig-strom_anfang.
:CODE:
#+begin_src python :session strom :results output
  plt.clf()
  markersize = 3
  cut = 500
  fig, ax = plt.subplots(2,2, sharex=True, sharey="row")
  ax[0,0].set_title("x")
  ax[0,0].set_ylabel("$I$ [A]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[0,0].plot(avglist[0][:cut], '.', markersize=markersize)
  ax[0,1].plot(avglist[1][:cut], '.', markersize=markersize)
  ax[1,0].plot(avglist[2][:cut], '.', markersize=markersize)
  ax[1,1].plot(avglist[3][:cut], '.', markersize=markersize)
  ax[0,1].set_title("z")
  ax[1,0].set_ylabel("$I$ [A]")
  ax[1,1].set_xlabel("Datenpunkte")
  plt.tight_layout()
  plt.savefig("./img/strom_anfang.png", dpi=100)
  plt.close()
  "./img/strom_anfang.png"

#+end_src

#+RESULTS:

:END:

#+name: fig-strom_anfang
#+caption: Verlauf der Stromstärke kurz nach Beginn der gemittelten Periode. Links Stromstärken der x-Spule, rechts der z-Spule.
#+attr_latex: :width \textwidth :placement [H]
[[file:img/strom_anfang.png]]

Anschließend wurde versucht Gleichung ref:eq-strom-spule an die Kurve zu fitten. Die Fitkurven und Parameter sind in Abbildung ref:fig-stromfit dargestellt.

:CODE:

#+begin_src python :session strom :results output
  from scipy.optimize import curve_fit

  def I_fixed(x, U, sr=48000):
      """
      Current for measurement with 48k Samplerate
      U = Voltage
      R = Resistance
      L = Inductance
      sr = Sample Rate (48000 for NI USB-6008)
      """
      R = 10.6
      L = 0.0056
      return (U/R) * (1- np.exp((-x/sr) * (R+10) / L))

  x = np.arange(0,cut,sr)
  R_z = 10.6
  L_z = 0.0056
  x = np.linspace(0,sr,cut)
  plt.clf()
  fits = []
  fig, ax = plt.subplots(2,2, figsize=(10,5), sharex=True, sharey="row")
  for i, data in enumerate(avglist):
      x = np.linspace(0,len(data),cut)
      popt, pcov = curve_fit(I_fixed, x, data[:cut], p0=(10), bounds=(0,50), method="trf")
      if i < 2:
          ax[0,i].plot(data[:cut], '.', markersize=2, label="Messwerte")
          ax[0,i].plot(I_fixed(x,*popt), 'r--', label=f"Fit: U={popt[0]:.3}")
          ax[0,i].legend()
      else:
          ax[1,i-2].plot(data[:cut], '.', markersize=2, label="Messwerte")
          ax[1,i-2].plot(I_fixed(x,*popt), 'r--', label=f"Fit: U={popt[0]:.3}")
          ax[1,i-2].legend()
  ax[1,0].set_xlabel("Datenpunkte")
  ax[1,1].set_xlabel("Datenpunkte")
  ax[0,0].set_ylabel("$I$ [A]")
  ax[1,0].set_ylabel("$I$ [A]")
  plt.tight_layout()
  plt.savefig("./img/strom_fit_fixed.png")
  "./img/strom_fit_fixed.png"

  def I(x, U, R, L, sr=48000):
      """
      Current for measurement with 48k Samplerate
      U = Voltage
      R = Resistance
      L = Inductance
      sr = Sample Rate (48000 for NI USB-6008)
      """
      return (U/R) * (1- np.exp((-x/sr) * (R+10) / L))

  x = np.arange(0,cut,sr)
  R_z = 10.6
  L_z = 0.0056
  x = np.linspace(0,sr,cut)
  plt.clf()
  fits = []
  fig, ax = plt.subplots(2,2, figsize=(10,5), sharex=True, sharey="row")
  for i, data in enumerate(avglist):
      x = np.linspace(0,len(data),cut)
      y = data[:cut]
      popt, pcov = curve_fit(I, x, y, p0=(10, 10, 0.005), bounds=(0,[50, 50,5]), method="trf")
      y_fit = I(x, *popt)
      ss_res = np.sum((y - y_fit) **2)
      ss_tot = np.sum((y-np.mean(y))**2)
      r2 = 1 - (ss_res / ss_tot)
      print(f"")
      if i < 2:
          ax[0,i].plot(data[:cut], '.', markersize=2, label="Messwerte")
          ax[0,i].plot(I(x,*popt), 'r--', label=f"Fit: U={popt[0]:.3}, R={popt[1]:.3}, L={popt[2]:.3}, $R^2$ = {r2:.3f}")
          ax[0,i].legend()
      else:
          ax[1,i-2].plot(data[:cut], '.', markersize=2, label="Messwerte")
          ax[1,i-2].plot(I(x,*popt), 'r--', label=f"Fit: U={popt[0]:.3}, R={popt[1]:.3}, L={popt[2]:.3}, $R^2$ = {r2:.3f}")
          ax[1,i-2].legend()
  ax[1,0].set_xlabel("Datenpunkte")
  ax[1,1].set_xlabel("Datenpunkte")
  ax[0,0].set_ylabel("$I$ [A]")
  ax[1,0].set_ylabel("$I$ [A]")
  plt.tight_layout()
  plt.savefig("./img/strom_fit.png")
  plt.close()
  "./img/strom_fit.png"

#+end_src

#+RESULTS:

:END:

#+name: fig-stromfit
#+caption: Fitfunktion zu Gleichung ref:eq-strom-spule durch die gemessenen Stromstärken.
#+attr_latex: :width \textwidth :placement [h]
[[file:img/strom_fit.png]]


# #+name: fig-stromfit_fixed
# #+caption: Fitfunktion zu Gleichung ref:eq-strom-spule durch die gemessenen Stromstärken mit vorgegebenem Widerstand $R$ und Induktiviät $L$.
# #+attr_latex: :width \textwidth :placement [h]
# [[file:img/strom_fit_fixed.png]]
# #####

Analog dazu wurden die selben Schritte für die magnetische Flussdichte durchgeführt. Abbildung ref:fig-mag zeigt den zeitlichen Verlauf des Flussdichte.

:CODE:

#+begin_src python :session mag :results output
  import matplotlib
  matplotlib.use("agg")
  import matplotlib.pyplot as plt
  import numpy as np
  import pandas as pd
  from scipy.optimize import curve_fit
  import scipy.constants as constants

  B_file1 = "./Messung/B/x/2mT_square_0.csv"
  B_file2 = "./Messung/B/z/2mT_square_0.csv"
  B_file3 = "./Messung/B/x/3mT_square_0.csv"
  B_file4 = "./Messung/B/z/3mT_square_0.csv"

  datalist = [
        (pd.read_csv(B_file1).to_numpy()),
        (pd.read_csv(B_file2).to_numpy()),
        (pd.read_csv(B_file3).to_numpy()),
        (pd.read_csv(B_file4).to_numpy())]

  # Anfang und Ende abschneiden
  for i, data in enumerate(datalist):
      sr = 48000
      end = np.argmax(data>0.04)
      if i == 0:
          end_off = end - 29
          sr_off = sr + 23
      elif i == 1:
          end_off = end - 15 
          sr_off = sr + 22
      elif i == 2:
          end_off = end - 15
          sr_off = sr + 22
      elif i == 3:
          end_off = end - 10
          sr_off = sr + 22
      else:
          end_off = end
          sr_off = sr
      data = data[end_off:end_off+10*sr_off]
      datalist[i] = data

  fig, ax = plt.subplots(2,2, sharex=True)
  ax[0,0].plot(datalist[0]*10)
  ax[0,1].plot(datalist[1]*10)
  ax[1,0].plot(datalist[2]*10)
  ax[1,1].plot(datalist[3]*10)
  ax[0,0].set_title("x")
  ax[0,1].set_title("z")
  ax[0,0].set_ylabel("$B$ [mT]")
  ax[1,0].set_ylabel("$B$ [mT]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[1,1].set_xlabel("Datenpunkte")
  ax[1,1].set_xticks(np.arange(0,500000,step=150000))
  plt.tight_layout()
  plt.savefig("./img/mag.png", dpi=100)
  plt.close('all')
  "./img/mag.png"
#+end_src

#+RESULTS:

:END:

#+name: fig-mag
#+caption: Zeitlicher Verlauf der magnetischen Flussdichte bei einer angelegten Rechteckspannung. Links ist die magnetische Flussdichte der x-Spulen dargestellt, rechts das der z-Spulen.
#+attr_latex: :width \textwidth :placement [H]
[[file:img/mag.png]]

Auch hier wird wieder über alle zehn Perioden gemittelt, einerseits um das hohe Rauschen aus dem Signal zu entfernen, andererseits um eine einzelne Periode betrachten zu können. Die gemittelten Messwerte sind in Abbildung ref:fig-mag_avg zu sehen.

:CODE:

#+begin_src python :session mag :results output
  # in 10 Perioden schneiden:
  n_periods = 10
  avglist = []
  for i, data in enumerate(datalist):
      periodic = data.reshape(n_periods, len(data)//n_periods)
      avg = periodic.mean(axis=0)
      avglist.append(avg)
  plt.clf()
  fig, ax = plt.subplots(2,2, sharex=True)
  ax[0,0].set_title("x")
  ax[0,0].set_ylabel("$B$ [mT]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[0,0].plot(avglist[0]*10, '.', markersize=3)
  ax[0,1].plot(avglist[2]*10, '.', markersize=3)
  ax[1,0].plot(avglist[1]*10, '.', markersize=3)
  ax[1,1].plot(avglist[3]*10, '.', markersize=3)
  ax[0,1].set_title("z")
  ax[1,0].set_ylabel("$B$ [mT]")
  ax[1,1].set_xlabel("Datenpunkte")
  ax[0,0].set_xticks(np.arange(0,50000,15000))
  plt.tight_layout()
  plt.savefig("./img/mag_avg.png", dpi=100)
  plt.close()
  "./img/mag_avg.png"
#+end_src

#+RESULTS:

:END:

#+name: fig-mag_avg
#+caption: Über alle zehn Perioden gemittelte Messwerte der magnetischen Flussdichte für x-Spule (links) und z-Spule (rechts).
#+attr_latex: :width \textwidth :placement [H]
[[file:img/mag_avg.png]]

Auch hier sind Spitzen am Beginn des Plateaus zu sehen. Diese haben die gleichen Ursachen wie bereits für die Stromstärke genannt, und wurden deswegen erwartet, da die magnetische Flussdichte aus dem bereits gemessenen durch die Spulen fließenden Strom resultiert.

Analog zur Stromstärkenmessung ist vor allem der Einschaltvorgang von Interesse. Dieser ist in Abbildung ref:fig-mag_anfang zu sehen.

:CODE:

#+begin_src python :session mag :results output
  plt.clf()
  markersize = 3
  cut = 500
  fig, ax = plt.subplots(2,2, figsize=(10,5), sharex=True, sharey="row")
  ax[0,0].set_title("x")
  ax[0,0].set_ylabel("$B$ [mT]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[0,0].plot(avglist[0][:cut]*10, '.', markersize=markersize)
  ax[0,1].plot(avglist[1][:cut]*10, '.', markersize=markersize)
  ax[1,0].plot(avglist[2][:cut]*10, '.', markersize=markersize)
  ax[1,1].plot(avglist[3][:cut]*10, '.', markersize=markersize)
  ax[0,1].set_title("z")
  ax[1,0].set_ylabel("$B$ [mT]")
  ax[1,1].set_xlabel("Datenpunkte")
  plt.tight_layout()
  plt.savefig("./img/mag_anfang.png", dpi=100)
  plt.close()
  "./img/mag_anfang.png"
#+end_src

#+RESULTS:

:END:


#+name: fig-mag_anfang
#+caption: Verlauf der magnetischen Flussdichte kurz nach Beginn der gemittelten Periode. Links für x-Spule, rechts für z-Spule.
#+attr_latex: :width \textwidth :placement [H]
[[file:img/mag_anfang.png]]

:CODE:

#+begin_src python :session mag :results output

  def I(x, U, R, L, sr=48000):
      """
      Current for measurement with 48k Samplerate
      U = Voltage
      R = Resistance
      L = Inductance
      sr = Sample Rate (48000 for NI USB-6008)
      """
      R = 11.5
      L = 0.0056
      return (U / R) * (1 - np.exp((-x / sr) * (R+10) / L))



  def B_helmholtz(x, U, R, L, c):
      """
      U = Voltage
      R = ohmic resistance
      L = Inductance
      c = offset
      -----------
      n = Turns per coil
      r = radius
      """
      n = 660
      r = 0.03
      b = constants.mu_0 * (8 * I(x, U, R, L, sr=48000) *
                                  n) / (np.sqrt(125) * r) + c
      return b

  def B_z(I):
      # return constants.mu_0 * (8* I * n)/(np.sqrt(125)*r) + c
      return 0.01034 * I

  plt.clf()
  fig, ax = plt.subplots(2, 2, figsize=(10, 5), sharex=True, sharey="row")
  for i, data in enumerate(avglist):
      x = np.linspace(0, len(data), cut)
      y = data[:cut]
      # popt, pcov = curve_fit(B_helmholtz,
      #                        x,
      #                        y,
      #                        p0=(1, 10.6, 0.0056, 0),
      #                        bounds=([0, 0, 0, 0], [200, 30, 0.5, 10]),
                             # method="trf")
      # y_fit = B_helmholtz(x, *popt)
      # ss_res = np.sum((y - y_fit) **2)
      # ss_tot = np.sum((y-np.mean(y))**2)
      # r2 = 1 - (ss_res / ss_tot)
      if i < 2:
          ax[0, i].plot(data[:cut] *10 , label="Messwerte")
      else:
          ax[1, i - 2].plot(data[:cut] * 10, label="Messwerte") # *10 for ?? 
      if i == 0: # x
          B_i = B(0.158)
          ax[0,0 ].axhline( y=B_i * 1000, color='r', linestyle="--") # * 1000 for mT
      elif i == 1: # x
          B_i = B(0.317)
          ax[1,0 ].axhline( y=B_i * 1000, color='r', linestyle="--")
      elif i == 2: # z
          B_i = B_z(0.158)
          ax[0,1].axhline( y=B_i * 1000, color='r', linestyle="--")
      elif i == 3: #z
          B_i = B_z(0.317)
          ax[1,1].axhline( y=B_i * 1000, color='r', linestyle="--")


  ax[0,0].set_title("x")
  ax[0,1].set_title("z")
  ax[0,0].set_ylabel("B [mT]")
  ax[1,0].set_ylabel("B [mT]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[1,1].set_xlabel("Datenpunkte")
  plt.tight_layout()
  plt.savefig("./img/mag_fit.png")
  plt.close()
  "./img/mag_fit.png"
#+end_src

#+RESULTS:

:END:

:CODE:
#+begin_src python :session mag :results output
  # Fixed:
  def I_fixed(U, x, sr=48000):
      """
      Current for measurement with 48k Samplerate
      U = Voltage
      R = Resistance
      L = Inductance
      sr = Sample Rate (48000 for NI USB-6008)
      """
      R = 11.5
      L = 0.0056
      # L = 0.762
      return (U / R) * (1 - np.exp((-x / sr) * (R+10) / L))

  def B_helmholtz_fixed(x, U, c):
      """
      U = Voltage
      R = ohmic resistance
      L = Inductance
      c = offset
      -----------
      n = Turns per coil
      r = radius
      """
      R = 11.5
      L = 0.0056
      n = 330
      r = 0.030
      b = constants.mu_0 * (8 * I_fixed(U, x, sr=48000) *
                                  n) / (np.sqrt(125) * r) + c
      return b

  plt.clf()
  fig, ax = plt.subplots(2, 2, figsize=(10, 5), sharex=True, sharey="row")
  R_z = 11.5
  L_z = 0.0056
  for i, data in enumerate(avglist):
      x = np.linspace(0, len(data), cut)
      popt, pcov = curve_fit(B_helmholtz_fixed,
                             x,
                             data[:cut],
                             p0=(1, 1),
                             bounds=([0, -20], [2000, 20]),
                             method="trf")
      if i < 2:
          ax[0, i].plot(data[:cut], label="Messwerte")
          # ax[0, i].plot(
          #     B_helmholtz_fixed(x, *popt),
          #     'r--',
          #     label=f"Fit: U={popt[0]:.2f}")
          # ax[0, i].legend()
      else:
          ax[1, i - 2].plot(data[:cut], label="Messwerte")
          # ax[1, i - 2].plot(
          #     B_helmholtz_fixed(x, *popt),
          #     'r--',
          #     label=f"Fit: U={popt[0]:.2f}")
          ax[1, i - 2].legend()
      print()

  ax[0,0].set_title("x")
  ax[0,1].set_title("z")
  ax[0,0].set_ylabel("B [mT]")
  ax[1,0].set_ylabel("B [mT]")
  ax[1,0].set_xlabel("Datenpunkte")
  ax[1,1].set_xlabel("Datenpunkte")
  plt.tight_layout()
  plt.savefig("./img/mag_fit_fixed.png")
  plt.close()
  "./img/mag_fit_fixed.png"
#+end_src

#+RESULTS:

:END:

#+name: fig-mag_fit
#+caption:
#+attr_latex: :width \textwidth :placement [h]
[[file:img/mag_fit.png]]

# #+name: fig-mag_fit_fixed
# #+caption: Fixed 
# #+attr_latex: :width \textwidth :placement [h]
# [[file:img/mag_fit_fixed.png]]

Anhand des Verlaufs der Fitfunktionen und des $R^2$ Wertes, ist erkennbar, dass die entstehenden Magnetfelder nicht nur dem angenommenen Modell folgen, sondern noch komplexere Vorgänge in die Erzeugung der Magnetfelder hinein spielen.
** TODO Partikeltransport label:sec-partikelgeschwindigkeiten
Um aus den aufgenommen Videos aus dem Partikeltransportexperiment die Trajektorien und Partikelgeschwindigkeiten zu erhalten, wird das Programm /VideoSpotTracker/ verwendet. Hierzu wurden möglichst alle sich bewegenden Partikel als /"dark spot"/ mit der Größe 3 ausgewählt, und dann mittels /"follow jumps"/ die x- und z-Positionen der einzelnen Partikel in Pixel verfolgt und in einer csv-Datei aufgezeichnet (siehe Abbildung ref:fig-videospottracker). Da die Größe eines Pixels (\SI{278}{\nano\meter}) sowie die Framerate (1000 FPS) und somit die Zeit bekannt sind, lässt sich so die Durchschnittsgeschwindigkeit der Partikel berechnen. Bewegungen in y-Richtung sind unter anderem durch ein nicht genau orthogonal zur Streifenstruktur anliegendes Magnetfeld der x-Spule zu erklären.

#+name: fig-videospottracker
#+caption: Screenshot der /Video Spot Tracker/ Software nach erfolgreicher Auswertung eines Videos. Gelb markiert sind die Trajektorien der verschiedenen Partikel, blau die Endpunkte der Partikel. Vor allem im rechten Bildbereich ist eine reihenförmige Anordnung der Partikel über den Domänenwänden erkennbar.
#+attr_latex: :placement [h] :width 0.75\textwidth
file:./img/videospottracker.png

Um den Einfluss der Änderungsrate des Magnetfeldes auf die Partikelgeschwindigkeit und Form der Trajektorien zu bestimmen, wurden sechs verschiedene Magnetfeldsequenzen mit unterschiedlichen Änderungsraten erstellt. Amplitude und die Frequenz des Magnetfeldes wurden konstant gewählt für eine Messreihe. Variiert wurde lediglich die Plateaustartzeit, also jene Zeit nach der die maximale Amplitude des Magnetfeldes das erste Mal erreicht sein sollte (siehe Abbildung ref:fig-plateau). Es wurden sowohl für Magnetfeld in x-Richtung als auch z-Richtung die selben Plateaustartzeiten verwendet. Das bedeutet, dass bei unterschiedlichen Amplituden auch unterschiedliche Änderungsraten vorliegen. Um zwei verschiedene Magnetfeldsequenzen zu erstellen wurde die Ausgangspannung des DAQ-Gerätes für die Messreihen variiert. Für die erste Messreihe wurde $U_\mathrm{z} = U_\mathrm{x} = \SI{0.4}{\volt}$ gewählt, für die zweite wurde $U_\mathrm{x} = \SI{0.2}{\volt}$ und  $U_\mathrm{z} = \SI{0.4}{\volt}$ gewählt.

:CODE:
Veranschaulichung Plateauzeiten
#+begin_src python :session plateau :results output
  import matplotlib
  matplotlib.use("Agg")
  import numpy as np
  import matplotlib.pyplot as plt
  import scipy.signal as signal
  import scipy.constants as constants


  def trapez_signal(x, freq, width=2., slope=1., amp=1., offs=0, phase=0):
      """
      Easier construction of trapezoid_signal
      """
      amp = amp * 2
      offs = -1 * amp / 2
      phase = phase * np.pi / 180
      slope = slope / (2 * np.pi * freq)
      a = slope*width * \
          signal.sawtooth(2*np.pi*x*freq/width + 90*np.pi /
                          180 + phase, width=0.5)/4.
      a[a > amp / 2.] = amp / 2.
      a[a < -amp / 2.] = -amp / 2.
      return a + amp / 2. + offs


  x = np.linspace(0, 2 * np.pi, 1000)
  t = np.linspace (0,1,len(x))
  plat1 = trapez_signal(x, 1, slope=10000, amp=0.2, width=x[-1])
  plat2 = trapez_signal(x, 1, slope=5, amp=0.2, width=x[-1])
  plat3 = trapez_signal(x, 1, slope=2, amp=0.2, width=x[-1])
  plat4 = trapez_signal(x, 1, slope=1.333, amp=0.2, width=x[-1])
  plat5 = trapez_signal(x, 1, slope=1, amp=0.2, width=x[-1])
  plat6 = trapez_signal(x, 1, slope=0.8, amp=0.2, width=x[-1])
  plt.clf()
  plt.plot(t, plat1, label="0 s")
  plt.plot(t, plat2, '--', label="0.05 s")
  plt.plot(t, plat3, '--', label="0.1 s")
  plt.plot(t, plat4, '--', label="0.15 s")
  plt.plot(t, plat5, '--', label="0.2 s")
  plt.plot(t, plat6, label="0.25 s")
  plt.xlabel("Zeit [s]")
  plt.ylabel("B [mT]")
  plt.tight_layout()
  plt.legend()
  plt.xticks(np.arange(0,1.1,0.1))
  plt.grid()
  plt.tight_layout()
  plt.savefig("./img/plateau.png", dpi=100)
  "./img/plateau.png"
#+end_src

#+RESULTS:

:END:

#+name: fig-plateau
#+caption: Trapezförmige Magnetfeldsequenzen mit verschiedenen Plateaustartzeiten. Eine Plateaustartzeit von $\SI{0}{\s}$ bedeutet, dass eine Rechteckspannung vorliegt. Eine Plateaustartzeit von $\SI{0.25}{\s}$ bedeutet es liegt eine Dreieckspannung für eine Frequenz $f = \SI{1}{\hertz}$ vor. Entsprechend liegen Magnetfeldsequenzen mit unterschiedlichen Änderungsraten dazwischen.
#+attr_latex: :width 0.75\textwidth :placement [h]
[[file:./img/plateau.png]]

Da die bisher vorausgesetzten Modelle mit den experimentellen Daten verglichen werden sollen, wurden durch Simulationsskripte Trajektorien für verschiedene Magnetfeldänderungsraten vorhergesagt cite:holzinger_pythonscript_nodate. Dazu wurden Berechnungen der Magnetfeldlandschaften mit dem /The Object Oriented MicroMagnetic Framework/ (OOMMF) cite:donahue_oommf_1999, welche in der Arbeitsgruppe bereits vorher vorlagen, verwendet. Anschließend kann Anhand verschiedener physikalischer Parameter der Partikel und des EB-Systems der Gleichgewichtsabstand der Partikel über der Probe berechnet werden. Dieser wird benötigt um im nächsten Schritt mittels der berechneten Magnetfeldlandschaftsdaten aus OOMMF und den Parametern des externen Magnetfeldes, die Trajektorie der Partikel während eines Transportschrittes zu bestimmen.

# TODO Geschwindigkeit aus Simulation?

Um einen Vergleich zwischen Simulation und Messung zu erhalten, wurde von selektierten gemessenen Transportschritten der Partikeln eine mittlere Trajektorie gebildet. Der Vergleich zwischen realen und simulierten Trajektorien ist in Abbildung ref:fig-traj zu sehen.

Man erkennt deutlich eine Abflachung des großen Transportschrittes für Magnetfelder mit späteren Plateaustartzeiten, d.h. niedrigeren Magnetfeldänderungsraten. Da die Steigung der x-Position der Geschwindigkeit der Partikel entspricht, ist offensichtlich, dass niedrigere Magnetfeldänderungsraten auch niedrigere Gleichgewichtsgeschwindigkeiten bewirken.

:CODE:
 Gemessene Trajektorien:
#+begin_src python :session traj :results file
  import numpy as np
  import matplotlib
  matplotlib.use("Agg")
  import matplotlib.pyplot as plt
  import pandas as pd

  px_size = 278e-9

  t_0 = pd.read_csv("./Messung/800nmSi/1um_0,4_slopeinf.csv", usecols=(0,1,2,3))   
  t_005 = pd.read_csv("./Messung/800nmSi/1um_0,4_slope10.csv", usecols=(0,1,2,3))   
  t_01 = pd.read_csv("./Messung/800nmSi/1um_0,4_slope4.csv", usecols=(0,1,2,3))   
  t_015 = pd.read_csv("./Messung/800nmSi/1um_0,4_slope2,666.csv", usecols=(0,1,2,3))   
  t_02 = pd.read_csv("./Messung/800nmSi/1um_0,4_slope2.csv", usecols=(0,1,2,3))   
  t_025 = pd.read_csv("./Messung/800nmSi/1um_0,4_slope1,6.csv", usecols=(0,1,2,3))   

  datalist = [t_0,
              # t_005["X"].to_numpy(),
              # t_01["X"].to_numpy(),
              # t_015["X"].to_numpy(),
              # t_02["X"].to_numpy(),
              # t_025["X"].to_numpy()
              ]
  for data in datalist:
      num_particles = len(data.loc[data["FrameNumber"] == 0])
      x_vector = data["X"].to_numpy()
      x_matrix = np.reshape(x_vector, (len(data["FrameNumber"])//num_particles, num_particles)) * px_size
      # [plt.plot(x_matrix[:,i]) for i in range (0, len(x_matrix[0,:]),1)]
      plt.plot(x_matrix[:,16])

  plt.savefig("./img/traj_real.png")
  plt.close()
  "./img/traj_real.png"
#+end_src

#+RESULTS:
[[file:./img/traj_real.png]]


:END:

#+name: fig-traj_real
#+caption: Darstellung der einzelnen Trajektorien von ausgewählten Partikeln bei verschiedenen Änderungsraten des Magnetfeldes. 
#+attr_latex: :placmeent [!h] :width 0.7\textwidth
# file:./img/traj_real.png

#+name: fig-traj
#+caption: Vergleich gemessener (oben) Trajektorien mit simulierten (unten) Trajektorien der superparamagnetischen Partikel. Die Plateaustartzeiten der Magnetfelder steigen von links nach rechts.
#+attr_latex: :placmeent [!h] :width \textwidth
file:./img/sim.png

In Abbildung ref:fig-img_v sind die Gleichgewichtsgeschwindigkeiten der Partikel für unterschiedliche Plateaustartzeiten und als Fehler die Standardabweichung vom Mittelwert der Stichprobe vom Mittelwert aller Werte aufgetragen. Es ist deutlich erkennbar, dass niedrigere Änderungsraten des externen Magnetfeldes auch niedrigere Gleichgewichtsgeschwindigkeiten bewirken.

:CODE:
Geschwindigkeiten
#+begin_src python :session v :exports none :results output
  import numpy as np
  import matplotlib
  matplotlib.use("Agg")
  import matplotlib.pyplot as plt
  from matplotlib import rc
  rc('font',**{'family':'sans-serif','sans-serif':['Helvetica']})
  rc('text', usetex=True)

  t_plateau = [0.25, 0.2, 0.15, 0.1, 0.05, 0]
  v1 = [54.86, 51.09, 51.51, 60.8, 87.9, 130.91] 
  err1 = [0.8, 1.19, 1.97, 0.7, 1.44, 2.62]
  v2 = [65.55, 59.60, 63.13, 75.53, 108.23, 119.98]
  err2 = [1.09, 0.76, 1.07, 1.07, 1.05, 1.34]

  plt.clf()
  fig, ax = plt.subplots(1,1)
  ax.errorbar(t_plateau, v1, yerr=err1, label="B(z) = B(x) = 3.29 mT", capsize=3)
  ax.errorbar(t_plateau, v2, yerr=err2, label="B(z) = 3.29 mT,  B(x) = 1,19 mT", capsize=3)
  ax.legend()
  ax.set_xlabel("Startzeit Plateau [s]")
  ax.set_ylabel("Geschwindigkeit gr. Schritt [mT/s]")
  ax.grid()
  plt.savefig("./img/v.png", dpi=100)
#+end_src

#+RESULTS:

:END: 
 
#+caption: Gemessene Partikelgeschwindigkeiten für verschiedene Startzeiten des Plateaus in der angelegten Trapezspannung für eine Frequenz von 1 Hz und deren Standardabweichung vom Mittelwert.
#+attr_latex: :placement [!h] :width .75\textwidth
#+name: fig-img_v
[[file:./img/v.png]]

Um die Gleichgewichtsgeschwindigkeit der Partikel in einem großen Transportschritt zwischen zwei Domänenwänden (im Folgenden nur noch Transportschritt genannt) zu berechnen, wird die zuvor aufgenommene csv-Datei in einem Pythonscript cite:holzinger_pythonscript_nodate-1 eingelesen. Zunächst werden die Trajektorien der Partikel während der gesamten Aufnahme anhand der bekannten Frequenz des externen Magnetfeldes in einzelne Transportschritte aufgeteilt. Um die Geschwindigkeit der einzelnen Schritte zu bestimmen wird zunächst eine gaußsche Fehlerfunktion an die gemessenen Werte gefittet. Unzureichend genaue Fits werden nicht weiter betrachtet. Da die Ableitung der gaußschen Fehlerfunktion eine gaußsche Glockenkurve ist, lässt sich durch Ableiten der einzelnen  Fitfunktionen die durchschnittliche Geschwindigkeit des Partikels für einen Schritt bestimmen. Der Mittelwert dieser durchschnittlichen Gleichgewichtsgeschwindigkeiten für alle erfolgreich gefitteten Transportschritte der Partikel in einer Messung wird schließlich vom Programm ausgegeben.

* TODO Zusammenfassung und Ausblick label:sec-zusammenfassung
# Beliebige Magnetfeldsequenzen
# Trigger Camera
* Anhang
** DONE Python-Script zur Messung von Stromstärke und magnetischer Flussdichte: label:anh-messung
   CLOSED: [2019-10-10 Do 16:04]

#+begin_src python :exports code
  """ Measure magnetic fieldstrength with NI USB-6002 """
  import numpy as np
  import nidaqmx
  import matplotlib.pyplot as plt
  import pandas as pd

  ''' You may have to adjust these values '''
  CHANNEL = "Dev1/ai0" # DAQ Device on your PC
  SAMPLE_RATE = 48000 # Depends on the Device
  TIME = 10 # Measurement time in sec
  SAMPS_PER_CHAN = 48000 * TIME 
  CONVERSION_FACTOR = 10 # Depends on the measuring range of the teslameter

  def measure(file):
      """ make a new measurement into a file """
      with nidaqmx.Task() as task:
          task.ai_channels.add_ai_voltage_chan(CHANNEL)
          task.timing.cfg_samp_clk_timing(SAMPLE_RATE,
                                          samps_per_chan=SAMPS_PER_CHAN,
                                          sample_mode=nidaqmx.constants.AcquisitionType.FINITE)
          task.start()
          task.wait_until_done(timeout=1002)
          data = np.asarray(task.read(number_of_samples_per_channel=SAMPS_PER_CHAN))
      df = pd.DataFrame(data)
      df.to_csv(file, index=False)
      return data

  def read_csv(file):
      return pd.read_csv(file)

  if __name__ == "__main__":
      #Uncomment if you want to measure new data
      #data = measure("data_200mt.csv")
      # Uncomment if you want to read a datafile:
      filename = "z_1V_1Hz_200mT_1.csv"
      data = read_csv(filename)['0'].to_numpy()
      #####

      plt.tight_layout()
      plt.plot(data * CONVERSION_FACTOR, 'b')
      plt.show()
#+end_src

#+RESULTS:

  :PROPERTIES:
  :UNNUMBERED: t
  :END:
  
\printbibliography
  
* Danksagung
:PROPERTIES:
:UNNUMBERED: t
:END:
Danke.

* SONSTIGES :ignore:

#+begin_src python :session :results output
  import numpy as np
  def L_helmholtz(N, R, l):
      L = 2 * N**2 * R * 4 * np.pi * 10**(-7) * (( np.pi * R / l + (2*R/2.2)) + 4.941/4*np.pi)
      return L


  r_wire = 2.79e-4
  l_wire = 330*np.pi * 2 *r_wire
  # print(f"{L_helmholtz(2*330, r_wire, l_wire) * 1000} mH")
  # print(f"{L_helmholtz(660, 0.03, 0.1) * 1000} mH")
#+end_src

#+RESULTS:
